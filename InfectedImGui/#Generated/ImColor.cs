// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace InfectedImGui
{
    [StructLayout(LayoutKind.Explicit, Size = 16)]
    public unsafe partial struct ImColor
    {
        [FieldOffset(0)] public ImVec4 Value;

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper15", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImColor* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor()
        {
            fixed (ImColor* @this = &this)
            { Constructor_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper16", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImColor* @this, int r, int g, int b, int a);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(int r, int g, int b, int a = 255)
        {
            fixed (ImColor* @this = &this)
            { Constructor_PInvoke(@this, r, g, b, a); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper17", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImColor* @this, uint rgba);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(uint rgba)
        {
            fixed (ImColor* @this = &this)
            { Constructor_PInvoke(@this, rgba); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper18", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImColor* @this, float r, float g, float b, float a);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(float r, float g, float b, float a = 1f)
        {
            fixed (ImColor* @this = &this)
            { Constructor_PInvoke(@this, r, g, b, a); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper19", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImColor* @this, ImVec4* col);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(ImVec4* col)
        {
            fixed (ImColor* @this = &this)
            { Constructor_PInvoke(@this, col); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK7ImColorcvjEv", ExactSpelling = true)]
        private static extern uint ____ConversionOperator_ImU32_PInvoke(ImColor* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint ____ConversionOperator_ImU32()
        {
            fixed (ImColor* @this = &this)
            { return ____ConversionOperator_ImU32_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK7ImColorcv6ImVec4Ev", ExactSpelling = true)]
        private static extern ImVec4 ____ConversionOperator_ImVec4_PInvoke(ImColor* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImVec4 ____ConversionOperator_ImVec4()
        {
            fixed (ImColor* @this = &this)
            { return ____ConversionOperator_ImVec4_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN7ImColor6SetHSVEffff", ExactSpelling = true)]
        private static extern void SetHSV_PInvoke(ImColor* @this, float h, float s, float v, float a);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void SetHSV(float h, float s, float v, float a = 1f)
        {
            fixed (ImColor* @this = &this)
            { SetHSV_PInvoke(@this, h, s, v, a); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN7ImColor3HSVEffff", ExactSpelling = true)]
        public static extern ImColor HSV(float h, float s, float v, float a = 1f);
    }
}
