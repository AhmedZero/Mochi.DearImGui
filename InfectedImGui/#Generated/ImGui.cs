// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using InfectedImGui.Infrastructure;
using InfectedImGui.Internal;
using System.Runtime.InteropServices;

namespace InfectedImGui
{
    public unsafe static partial class ImGui
    {
        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13CreateContextEP11ImFontAtlas", ExactSpelling = true)]
        public static extern ImGuiContext* CreateContext(ImFontAtlas* shared_font_atlas = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14DestroyContextEP12ImGuiContext", ExactSpelling = true)]
        public static extern void DestroyContext(ImGuiContext* ctx = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetCurrentContextEv", ExactSpelling = true)]
        public static extern ImGuiContext* GetCurrentContext();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17SetCurrentContextEP12ImGuiContext", ExactSpelling = true)]
        public static extern void SetCurrentContext(ImGuiContext* ctx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5GetIOEv", ExactSpelling = true)]
        public static extern ImGuiIO* GetIO();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8GetStyleEv", ExactSpelling = true)]
        public static extern ImGuiStyle* GetStyle();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8NewFrameEv", ExactSpelling = true)]
        public static extern void NewFrame();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8EndFrameEv", ExactSpelling = true)]
        public static extern void EndFrame();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui6RenderEv", ExactSpelling = true)]
        public static extern void Render();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11GetDrawDataEv", ExactSpelling = true)]
        public static extern ImDrawData* GetDrawData();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14ShowDemoWindowEPb", ExactSpelling = true)]
        public static extern void ShowDemoWindow(bool* p_open = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17ShowMetricsWindowEPb", ExactSpelling = true)]
        public static extern void ShowMetricsWindow(bool* p_open = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15ShowAboutWindowEPb", ExactSpelling = true)]
        public static extern void ShowAboutWindow(bool* p_open = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15ShowStyleEditorEP10ImGuiStyle", ExactSpelling = true)]
        public static extern void ShowStyleEditor(ImGuiStyle* @ref = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17ShowStyleSelectorEPKc", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ShowStyleSelector(byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16ShowFontSelectorEPKc", ExactSpelling = true)]
        public static extern void ShowFontSelector(byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13ShowUserGuideEv", ExactSpelling = true)]
        public static extern void ShowUserGuide();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10GetVersionEv", ExactSpelling = true)]
        public static extern byte* GetVersion();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15StyleColorsDarkEP10ImGuiStyle", ExactSpelling = true)]
        public static extern void StyleColorsDark(ImGuiStyle* dst = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16StyleColorsLightEP10ImGuiStyle", ExactSpelling = true)]
        public static extern void StyleColorsLight(ImGuiStyle* dst = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18StyleColorsClassicEP10ImGuiStyle", ExactSpelling = true)]
        public static extern void StyleColorsClassic(ImGuiStyle* dst = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5BeginEPKcPbi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool Begin(byte* name, bool* p_open = null, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui3EndEv", ExactSpelling = true)]
        public static extern void End();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10BeginChildEPKcRK6ImVec2bi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginChild(byte* str_id, ImVec2* size, [MarshalAs(UnmanagedType.I1)] bool border = false, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10BeginChildEjRK6ImVec2bi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginChild(uint id, ImVec2* size, [MarshalAs(UnmanagedType.I1)] bool border = false, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8EndChildEv", ExactSpelling = true)]
        public static extern void EndChild();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17IsWindowAppearingEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsWindowAppearing();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17IsWindowCollapsedEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsWindowCollapsed();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15IsWindowFocusedEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsWindowFocused(ImGuiFocusedFlags flags = ImGuiFocusedFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15IsWindowHoveredEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsWindowHovered(ImGuiHoveredFlags flags = ImGuiHoveredFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetWindowDrawListEv", ExactSpelling = true)]
        public static extern ImDrawList* GetWindowDrawList();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetWindowDpiScaleEv", ExactSpelling = true)]
        public static extern float GetWindowDpiScale();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12GetWindowPosEv", ExactSpelling = true)]
        public static extern ImVec2 GetWindowPos();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13GetWindowSizeEv", ExactSpelling = true)]
        public static extern ImVec2 GetWindowSize();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14GetWindowWidthEv", ExactSpelling = true)]
        public static extern float GetWindowWidth();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15GetWindowHeightEv", ExactSpelling = true)]
        public static extern float GetWindowHeight();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetWindowViewportEv", ExactSpelling = true)]
        public static extern ImGuiViewport* GetWindowViewport();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16SetNextWindowPosERK6ImVec2iS2_", ExactSpelling = true)]
        public static extern void SetNextWindowPos(ImVec2* pos, ImGuiCond cond, ImVec2* pivot);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17SetNextWindowSizeERK6ImVec2i", ExactSpelling = true)]
        public static extern void SetNextWindowSize(ImVec2* size, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui28SetNextWindowSizeConstraintsERK6ImVec2S2_PFvP21ImGuiSizeCallbackDataEPv", ExactSpelling = true)]
        public static extern void SetNextWindowSizeConstraints(ImVec2* size_min, ImVec2* size_max, delegate* unmanaged[Cdecl]<ImGuiSizeCallbackData*, void> custom_callback = null, void* custom_callback_data = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui24SetNextWindowContentSizeERK6ImVec2", ExactSpelling = true)]
        public static extern void SetNextWindowContentSize(ImVec2* size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22SetNextWindowCollapsedEbi", ExactSpelling = true)]
        public static extern void SetNextWindowCollapsed([MarshalAs(UnmanagedType.I1)] bool collapsed, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18SetNextWindowFocusEv", ExactSpelling = true)]
        public static extern void SetNextWindowFocus();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20SetNextWindowBgAlphaEf", ExactSpelling = true)]
        public static extern void SetNextWindowBgAlpha(float alpha);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21SetNextWindowViewportEj", ExactSpelling = true)]
        public static extern void SetNextWindowViewport(uint viewport_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12SetWindowPosERK6ImVec2i", ExactSpelling = true)]
        public static extern void SetWindowPos(ImVec2* pos, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13SetWindowSizeERK6ImVec2i", ExactSpelling = true)]
        public static extern void SetWindowSize(ImVec2* size, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18SetWindowCollapsedEbi", ExactSpelling = true)]
        public static extern void SetWindowCollapsed([MarshalAs(UnmanagedType.I1)] bool collapsed, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14SetWindowFocusEv", ExactSpelling = true)]
        public static extern void SetWindowFocus();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18SetWindowFontScaleEf", ExactSpelling = true)]
        public static extern void SetWindowFontScale(float scale);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12SetWindowPosEPKcRK6ImVec2i", ExactSpelling = true)]
        public static extern void SetWindowPos(byte* name, ImVec2* pos, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13SetWindowSizeEPKcRK6ImVec2i", ExactSpelling = true)]
        public static extern void SetWindowSize(byte* name, ImVec2* size, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18SetWindowCollapsedEPKcbi", ExactSpelling = true)]
        public static extern void SetWindowCollapsed(byte* name, [MarshalAs(UnmanagedType.I1)] bool collapsed, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14SetWindowFocusEPKc", ExactSpelling = true)]
        public static extern void SetWindowFocus(byte* name);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21GetContentRegionAvailEv", ExactSpelling = true)]
        public static extern ImVec2 GetContentRegionAvail();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19GetContentRegionMaxEv", ExactSpelling = true)]
        public static extern ImVec2 GetContentRegionMax();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25GetWindowContentRegionMinEv", ExactSpelling = true)]
        public static extern ImVec2 GetWindowContentRegionMin();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25GetWindowContentRegionMaxEv", ExactSpelling = true)]
        public static extern ImVec2 GetWindowContentRegionMax();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui27GetWindowContentRegionWidthEv", ExactSpelling = true)]
        public static extern float GetWindowContentRegionWidth();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10GetScrollXEv", ExactSpelling = true)]
        public static extern float GetScrollX();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10GetScrollYEv", ExactSpelling = true)]
        public static extern float GetScrollY();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SetScrollXEf", ExactSpelling = true)]
        public static extern void SetScrollX(float scroll_x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SetScrollYEf", ExactSpelling = true)]
        public static extern void SetScrollY(float scroll_y);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13GetScrollMaxXEv", ExactSpelling = true)]
        public static extern float GetScrollMaxX();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13GetScrollMaxYEv", ExactSpelling = true)]
        public static extern float GetScrollMaxY();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14SetScrollHereXEf", ExactSpelling = true)]
        public static extern void SetScrollHereX(float center_x_ratio = 0.5f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14SetScrollHereYEf", ExactSpelling = true)]
        public static extern void SetScrollHereY(float center_y_ratio = 0.5f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17SetScrollFromPosXEff", ExactSpelling = true)]
        public static extern void SetScrollFromPosX(float local_x, float center_x_ratio = 0.5f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17SetScrollFromPosYEff", ExactSpelling = true)]
        public static extern void SetScrollFromPosY(float local_y, float center_y_ratio = 0.5f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8PushFontEP6ImFont", ExactSpelling = true)]
        public static extern void PushFont(ImFont* font);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7PopFontEv", ExactSpelling = true)]
        public static extern void PopFont();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14PushStyleColorEij", ExactSpelling = true)]
        public static extern void PushStyleColor(ImGuiCol idx, uint col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14PushStyleColorEiRK6ImVec4", ExactSpelling = true)]
        public static extern void PushStyleColor(ImGuiCol idx, ImVec4* col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13PopStyleColorEi", ExactSpelling = true)]
        public static extern void PopStyleColor(int count = 1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12PushStyleVarEif", ExactSpelling = true)]
        public static extern void PushStyleVar(ImGuiStyleVar idx, float val);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12PushStyleVarEiRK6ImVec2", ExactSpelling = true)]
        public static extern void PushStyleVar(ImGuiStyleVar idx, ImVec2* val);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11PopStyleVarEi", ExactSpelling = true)]
        public static extern void PopStyleVar(int count = 1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22PushAllowKeyboardFocusEb", ExactSpelling = true)]
        public static extern void PushAllowKeyboardFocus([MarshalAs(UnmanagedType.I1)] bool allow_keyboard_focus);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21PopAllowKeyboardFocusEv", ExactSpelling = true)]
        public static extern void PopAllowKeyboardFocus();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16PushButtonRepeatEb", ExactSpelling = true)]
        public static extern void PushButtonRepeat([MarshalAs(UnmanagedType.I1)] bool repeat);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15PopButtonRepeatEv", ExactSpelling = true)]
        public static extern void PopButtonRepeat();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13PushItemWidthEf", ExactSpelling = true)]
        public static extern void PushItemWidth(float item_width);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12PopItemWidthEv", ExactSpelling = true)]
        public static extern void PopItemWidth();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16SetNextItemWidthEf", ExactSpelling = true)]
        public static extern void SetNextItemWidth(float item_width);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13CalcItemWidthEv", ExactSpelling = true)]
        public static extern float CalcItemWidth();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15PushTextWrapPosEf", ExactSpelling = true)]
        public static extern void PushTextWrapPos(float wrap_local_pos_x = 0f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14PopTextWrapPosEv", ExactSpelling = true)]
        public static extern void PopTextWrapPos();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7GetFontEv", ExactSpelling = true)]
        public static extern ImFont* GetFont();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11GetFontSizeEv", ExactSpelling = true)]
        public static extern float GetFontSize();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22GetFontTexUvWhitePixelEv", ExactSpelling = true)]
        public static extern ImVec2 GetFontTexUvWhitePixel();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11GetColorU32Eif", ExactSpelling = true)]
        public static extern uint GetColorU32(ImGuiCol idx, float alpha_mul = 1f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11GetColorU32ERK6ImVec4", ExactSpelling = true)]
        public static extern uint GetColorU32(ImVec4* col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11GetColorU32Ej", ExactSpelling = true)]
        public static extern uint GetColorU32(uint col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetStyleColorVec4Ei", ExactSpelling = true)]
        public static extern ImVec4* GetStyleColorVec4(ImGuiCol idx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9SeparatorEv", ExactSpelling = true)]
        public static extern void Separator();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8SameLineEff", ExactSpelling = true)]
        public static extern void SameLine(float offset_from_start_x = 0f, float spacing = -1f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7NewLineEv", ExactSpelling = true)]
        public static extern void NewLine();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7SpacingEv", ExactSpelling = true)]
        public static extern void Spacing();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5DummyERK6ImVec2", ExactSpelling = true)]
        public static extern void Dummy(ImVec2* size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui6IndentEf", ExactSpelling = true)]
        public static extern void Indent(float indent_w = 0f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8UnindentEf", ExactSpelling = true)]
        public static extern void Unindent(float indent_w = 0f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10BeginGroupEv", ExactSpelling = true)]
        public static extern void BeginGroup();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8EndGroupEv", ExactSpelling = true)]
        public static extern void EndGroup();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12GetCursorPosEv", ExactSpelling = true)]
        public static extern ImVec2 GetCursorPos();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13GetCursorPosXEv", ExactSpelling = true)]
        public static extern float GetCursorPosX();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13GetCursorPosYEv", ExactSpelling = true)]
        public static extern float GetCursorPosY();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12SetCursorPosERK6ImVec2", ExactSpelling = true)]
        public static extern void SetCursorPos(ImVec2* local_pos);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13SetCursorPosXEf", ExactSpelling = true)]
        public static extern void SetCursorPosX(float local_x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13SetCursorPosYEf", ExactSpelling = true)]
        public static extern void SetCursorPosY(float local_y);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetCursorStartPosEv", ExactSpelling = true)]
        public static extern ImVec2 GetCursorStartPos();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18GetCursorScreenPosEv", ExactSpelling = true)]
        public static extern ImVec2 GetCursorScreenPos();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18SetCursorScreenPosERK6ImVec2", ExactSpelling = true)]
        public static extern void SetCursorScreenPos(ImVec2* pos);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23AlignTextToFramePaddingEv", ExactSpelling = true)]
        public static extern void AlignTextToFramePadding();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetTextLineHeightEv", ExactSpelling = true)]
        public static extern float GetTextLineHeight();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui28GetTextLineHeightWithSpacingEv", ExactSpelling = true)]
        public static extern float GetTextLineHeightWithSpacing();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14GetFrameHeightEv", ExactSpelling = true)]
        public static extern float GetFrameHeight();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25GetFrameHeightWithSpacingEv", ExactSpelling = true)]
        public static extern float GetFrameHeightWithSpacing();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui6PushIDEPKc", ExactSpelling = true)]
        public static extern void PushID(byte* str_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui6PushIDEPKcS1_", ExactSpelling = true)]
        public static extern void PushID(byte* str_id_begin, byte* str_id_end);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui6PushIDEPKv", ExactSpelling = true)]
        public static extern void PushID(void* ptr_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui6PushIDEi", ExactSpelling = true)]
        public static extern void PushID(int int_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5PopIDEv", ExactSpelling = true)]
        public static extern void PopID();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5GetIDEPKc", ExactSpelling = true)]
        public static extern uint GetID(byte* str_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5GetIDEPKcS1_", ExactSpelling = true)]
        public static extern uint GetID(byte* str_id_begin, byte* str_id_end);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5GetIDEPKv", ExactSpelling = true)]
        public static extern uint GetID(void* ptr_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15TextUnformattedEPKcS1_", ExactSpelling = true)]
        public static extern void TextUnformatted(byte* text, byte* text_end = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui4TextEPKcz", ExactSpelling = true)]
        public static extern void Text(byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5TextVEPKcP13__va_list_tag", ExactSpelling = true)]
        public static extern void TextV(byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11TextColoredERK6ImVec4PKcz", ExactSpelling = true)]
        public static extern void TextColored(ImVec4* col, byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12TextColoredVERK6ImVec4PKcP13__va_list_tag", ExactSpelling = true)]
        public static extern void TextColoredV(ImVec4* col, byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12TextDisabledEPKcz", ExactSpelling = true)]
        public static extern void TextDisabled(byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13TextDisabledVEPKcP13__va_list_tag", ExactSpelling = true)]
        public static extern void TextDisabledV(byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11TextWrappedEPKcz", ExactSpelling = true)]
        public static extern void TextWrapped(byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12TextWrappedVEPKcP13__va_list_tag", ExactSpelling = true)]
        public static extern void TextWrappedV(byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9LabelTextEPKcS1_z", ExactSpelling = true)]
        public static extern void LabelText(byte* label, byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10LabelTextVEPKcS1_P13__va_list_tag", ExactSpelling = true)]
        public static extern void LabelTextV(byte* label, byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10BulletTextEPKcz", ExactSpelling = true)]
        public static extern void BulletText(byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11BulletTextVEPKcP13__va_list_tag", ExactSpelling = true)]
        public static extern void BulletTextV(byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui6ButtonEPKcRK6ImVec2", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool Button(byte* label, ImVec2* size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11SmallButtonEPKc", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SmallButton(byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15InvisibleButtonEPKcRK6ImVec2i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InvisibleButton(byte* str_id, ImVec2* size, ImGuiButtonFlags flags = ImGuiButtonFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11ArrowButtonEPKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ArrowButton(byte* str_id, ImGuiDir dir);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5ImageEPvRK6ImVec2S3_S3_RK6ImVec4S6_", ExactSpelling = true)]
        public static extern void Image(void* user_texture_id, ImVec2* size, ImVec2* uv0, ImVec2* uv1, ImVec4* tint_col, ImVec4* border_col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11ImageButtonEPvRK6ImVec2S3_S3_iRK6ImVec4S6_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ImageButton(void* user_texture_id, ImVec2* size, ImVec2* uv0, ImVec2* uv1, int frame_padding, ImVec4* bg_col, ImVec4* tint_col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8CheckboxEPKcPb", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool Checkbox(byte* label, bool* v);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13CheckboxFlagsEPKcPii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool CheckboxFlags(byte* label, int* flags, int flags_value);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13CheckboxFlagsEPKcPjj", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool CheckboxFlags(byte* label, uint* flags, uint flags_value);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11RadioButtonEPKcb", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool RadioButton(byte* label, [MarshalAs(UnmanagedType.I1)] bool active);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11RadioButtonEPKcPii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool RadioButton(byte* label, int* v, int v_button);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11ProgressBarEfRK6ImVec2PKc", ExactSpelling = true)]
        public static extern void ProgressBar(float fraction, ImVec2* size_arg, byte* overlay = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui6BulletEv", ExactSpelling = true)]
        public static extern void Bullet();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10BeginComboEPKcS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginCombo(byte* label, byte* preview_value, ImGuiComboFlags flags = ImGuiComboFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8EndComboEv", ExactSpelling = true)]
        public static extern void EndCombo();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5ComboEPKcPiPKS1_ii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool Combo(byte* label, int* current_item, byte** items, int items_count, int popup_max_height_in_items = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5ComboEPKcPiS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool Combo(byte* label, int* current_item, byte* items_separated_by_zeros, int popup_max_height_in_items = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5ComboEPKcPiPFbPviPS1_ES3_ii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool Combo(byte* label, int* current_item, delegate* unmanaged[Cdecl]<void*, int, byte**, NativeBoolean> items_getter, void* data, int items_count, int popup_max_height_in_items = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9DragFloatEPKcPffffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragFloat(byte* label, float* v, float v_speed, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10DragFloat2EPKcPffffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragFloat2(byte* label, ConstantArray_float_2* v, float v_speed, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10DragFloat3EPKcPffffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragFloat3(byte* label, ConstantArray_float_3* v, float v_speed, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10DragFloat4EPKcPffffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragFloat4(byte* label, ConstantArray_float_4* v, float v_speed, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15DragFloatRange2EPKcPfS2_fffS1_S1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragFloatRange2(byte* label, float* v_current_min, float* v_current_max, float v_speed, float v_min, float v_max, byte* format, byte* format_max = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7DragIntEPKcPifiiS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragInt(byte* label, int* v, float v_speed, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8DragInt2EPKcPifiiS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragInt2(byte* label, ConstantArray_int_2* v, float v_speed, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8DragInt3EPKcPifiiS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragInt3(byte* label, ConstantArray_int_3* v, float v_speed, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8DragInt4EPKcPifiiS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragInt4(byte* label, ConstantArray_int_4* v, float v_speed, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13DragIntRange2EPKcPiS2_fiiS1_S1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragIntRange2(byte* label, int* v_current_min, int* v_current_max, float v_speed, int v_min, int v_max, byte* format, byte* format_max = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10DragScalarEPKciPvfPKvS4_S1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragScalar(byte* label, ImGuiDataType data_type, void* p_data, float v_speed, void* p_min = null, void* p_max = null, byte* format = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11DragScalarNEPKciPvifPKvS4_S1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragScalarN(byte* label, ImGuiDataType data_type, void* p_data, int components, float v_speed, void* p_min = null, void* p_max = null, byte* format = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11SliderFloatEPKcPfffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderFloat(byte* label, float* v, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12SliderFloat2EPKcPfffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderFloat2(byte* label, ConstantArray_float_2* v, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12SliderFloat3EPKcPfffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderFloat3(byte* label, ConstantArray_float_3* v, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12SliderFloat4EPKcPfffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderFloat4(byte* label, ConstantArray_float_4* v, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11SliderAngleEPKcPfffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderAngle(byte* label, float* v_rad, float v_degrees_min, float v_degrees_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9SliderIntEPKcPiiiS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderInt(byte* label, int* v, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SliderInt2EPKcPiiiS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderInt2(byte* label, ConstantArray_int_2* v, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SliderInt3EPKcPiiiS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderInt3(byte* label, ConstantArray_int_3* v, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SliderInt4EPKcPiiiS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderInt4(byte* label, ConstantArray_int_4* v, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12SliderScalarEPKciPvPKvS4_S1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderScalar(byte* label, ImGuiDataType data_type, void* p_data, void* p_min, void* p_max, byte* format = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13SliderScalarNEPKciPviPKvS4_S1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderScalarN(byte* label, ImGuiDataType data_type, void* p_data, int components, void* p_min, void* p_max, byte* format = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12VSliderFloatEPKcRK6ImVec2PfffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool VSliderFloat(byte* label, ImVec2* size, float* v, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10VSliderIntEPKcRK6ImVec2PiiiS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool VSliderInt(byte* label, ImVec2* size, int* v, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13VSliderScalarEPKcRK6ImVec2iPvPKvS7_S1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool VSliderScalar(byte* label, ImVec2* size, ImGuiDataType data_type, void* p_data, void* p_min, void* p_max, byte* format = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9InputTextEPKcPcmiPFiP26ImGuiInputTextCallbackDataEPv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputText(byte* label, byte* buf, ulong buf_size, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None, delegate* unmanaged[Cdecl]<ImGuiInputTextCallbackData*, int> callback = null, void* user_data = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18InputTextMultilineEPKcPcmRK6ImVec2iPFiP26ImGuiInputTextCallbackDataEPv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputTextMultiline(byte* label, byte* buf, ulong buf_size, ImVec2* size, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None, delegate* unmanaged[Cdecl]<ImGuiInputTextCallbackData*, int> callback = null, void* user_data = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17InputTextWithHintEPKcS1_PcmiPFiP26ImGuiInputTextCallbackDataEPv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputTextWithHint(byte* label, byte* hint, byte* buf, ulong buf_size, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None, delegate* unmanaged[Cdecl]<ImGuiInputTextCallbackData*, int> callback = null, void* user_data = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10InputFloatEPKcPfffS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputFloat(byte* label, float* v, float step, float step_fast, byte* format, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11InputFloat2EPKcPfS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputFloat2(byte* label, ConstantArray_float_2* v, byte* format, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11InputFloat3EPKcPfS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputFloat3(byte* label, ConstantArray_float_3* v, byte* format, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11InputFloat4EPKcPfS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputFloat4(byte* label, ConstantArray_float_4* v, byte* format, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8InputIntEPKcPiiii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputInt(byte* label, int* v, int step = 1, int step_fast = 100, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9InputInt2EPKcPii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputInt2(byte* label, ConstantArray_int_2* v, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9InputInt3EPKcPii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputInt3(byte* label, ConstantArray_int_3* v, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9InputInt4EPKcPii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputInt4(byte* label, ConstantArray_int_4* v, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11InputDoubleEPKcPdddS1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputDouble(byte* label, double* v, double step, double step_fast, byte* format, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11InputScalarEPKciPvPKvS4_S1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputScalar(byte* label, ImGuiDataType data_type, void* p_data, void* p_step = null, void* p_step_fast = null, byte* format = null, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12InputScalarNEPKciPviPKvS4_S1_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputScalarN(byte* label, ImGuiDataType data_type, void* p_data, int components, void* p_step = null, void* p_step_fast = null, byte* format = null, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10ColorEdit3EPKcPfi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ColorEdit3(byte* label, ConstantArray_float_3* col, ImGuiColorEditFlags flags = ImGuiColorEditFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10ColorEdit4EPKcPfi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ColorEdit4(byte* label, ConstantArray_float_4* col, ImGuiColorEditFlags flags = ImGuiColorEditFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12ColorPicker3EPKcPfi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ColorPicker3(byte* label, ConstantArray_float_3* col, ImGuiColorEditFlags flags = ImGuiColorEditFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12ColorPicker4EPKcPfiPKf", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ColorPicker4(byte* label, ConstantArray_float_4* col, ImGuiColorEditFlags flags = ImGuiColorEditFlags.None, float* ref_col = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11ColorButtonEPKcRK6ImVec4i6ImVec2", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ColorButton(byte* desc_id, ImVec4* col, ImGuiColorEditFlags flags, ImVec2 size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19SetColorEditOptionsEi", ExactSpelling = true)]
        public static extern void SetColorEditOptions(ImGuiColorEditFlags flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8TreeNodeEPKc", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNode(byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8TreeNodeEPKcS1_z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNode(byte* str_id, byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8TreeNodeEPKvPKcz", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNode(void* ptr_id, byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9TreeNodeVEPKcS1_P13__va_list_tag", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNodeV(byte* str_id, byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9TreeNodeVEPKvPKcP13__va_list_tag", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNodeV(void* ptr_id, byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10TreeNodeExEPKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNodeEx(byte* label, ImGuiTreeNodeFlags flags = ImGuiTreeNodeFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10TreeNodeExEPKciS1_z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNodeEx(byte* str_id, ImGuiTreeNodeFlags flags, byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10TreeNodeExEPKviPKcz", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNodeEx(void* ptr_id, ImGuiTreeNodeFlags flags, byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11TreeNodeExVEPKciS1_P13__va_list_tag", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNodeExV(byte* str_id, ImGuiTreeNodeFlags flags, byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11TreeNodeExVEPKviPKcP13__va_list_tag", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNodeExV(void* ptr_id, ImGuiTreeNodeFlags flags, byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8TreePushEPKc", ExactSpelling = true)]
        public static extern void TreePush(byte* str_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8TreePushEPKv", ExactSpelling = true)]
        public static extern void TreePush(void* ptr_id = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7TreePopEv", ExactSpelling = true)]
        public static extern void TreePop();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25GetTreeNodeToLabelSpacingEv", ExactSpelling = true)]
        public static extern float GetTreeNodeToLabelSpacing();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16CollapsingHeaderEPKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool CollapsingHeader(byte* label, ImGuiTreeNodeFlags flags = ImGuiTreeNodeFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16CollapsingHeaderEPKcPbi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool CollapsingHeader(byte* label, bool* p_visible, ImGuiTreeNodeFlags flags = ImGuiTreeNodeFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15SetNextItemOpenEbi", ExactSpelling = true)]
        public static extern void SetNextItemOpen([MarshalAs(UnmanagedType.I1)] bool is_open, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SelectableEPKcbiRK6ImVec2", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool Selectable(byte* label, [MarshalAs(UnmanagedType.I1)] bool selected, ImGuiSelectableFlags flags, ImVec2* size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SelectableEPKcPbiRK6ImVec2", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool Selectable(byte* label, bool* p_selected, ImGuiSelectableFlags flags, ImVec2* size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12BeginListBoxEPKcRK6ImVec2", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginListBox(byte* label, ImVec2* size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10EndListBoxEv", ExactSpelling = true)]
        public static extern void EndListBox();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7ListBoxEPKcPiPKS1_ii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ListBox(byte* label, int* current_item, byte** items, int items_count, int height_in_items = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7ListBoxEPKcPiPFbPviPS1_ES3_ii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ListBox(byte* label, int* current_item, delegate* unmanaged[Cdecl]<void*, int, byte**, NativeBoolean> items_getter, void* data, int items_count, int height_in_items = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9PlotLinesEPKcPKfiiS1_ff6ImVec2i", ExactSpelling = true)]
        public static extern void PlotLines(byte* label, float* values, int values_count, int values_offset, byte* overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride = 4);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9PlotLinesEPKcPFfPviES2_iiS1_ff6ImVec2", ExactSpelling = true)]
        public static extern void PlotLines(byte* label, delegate* unmanaged[Cdecl]<void*, int, float> values_getter, void* data, int values_count, int values_offset, byte* overlay_text, float scale_min, float scale_max, ImVec2 graph_size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13PlotHistogramEPKcPKfiiS1_ff6ImVec2i", ExactSpelling = true)]
        public static extern void PlotHistogram(byte* label, float* values, int values_count, int values_offset, byte* overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride = 4);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13PlotHistogramEPKcPFfPviES2_iiS1_ff6ImVec2", ExactSpelling = true)]
        public static extern void PlotHistogram(byte* label, delegate* unmanaged[Cdecl]<void*, int, float> values_getter, void* data, int values_count, int values_offset, byte* overlay_text, float scale_min, float scale_max, ImVec2 graph_size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5ValueEPKcb", ExactSpelling = true)]
        public static extern void Value(byte* prefix, [MarshalAs(UnmanagedType.I1)] bool b);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5ValueEPKci", ExactSpelling = true)]
        public static extern void Value(byte* prefix, int v);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5ValueEPKcj", ExactSpelling = true)]
        public static extern void Value(byte* prefix, uint v);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui5ValueEPKcfS1_", ExactSpelling = true)]
        public static extern void Value(byte* prefix, float v, byte* float_format = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12BeginMenuBarEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginMenuBar();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10EndMenuBarEv", ExactSpelling = true)]
        public static extern void EndMenuBar();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16BeginMainMenuBarEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginMainMenuBar();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14EndMainMenuBarEv", ExactSpelling = true)]
        public static extern void EndMainMenuBar();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9BeginMenuEPKcb", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginMenu(byte* label, [MarshalAs(UnmanagedType.I1)] bool enabled = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7EndMenuEv", ExactSpelling = true)]
        public static extern void EndMenu();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8MenuItemEPKcS1_bb", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool MenuItem(byte* label, byte* shortcut = null, [MarshalAs(UnmanagedType.I1)] bool selected = false, [MarshalAs(UnmanagedType.I1)] bool enabled = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8MenuItemEPKcS1_Pbb", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool MenuItem(byte* label, byte* shortcut, bool* p_selected, [MarshalAs(UnmanagedType.I1)] bool enabled = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12BeginTooltipEv", ExactSpelling = true)]
        public static extern void BeginTooltip();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10EndTooltipEv", ExactSpelling = true)]
        public static extern void EndTooltip();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SetTooltipEPKcz", ExactSpelling = true)]
        public static extern void SetTooltip(byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11SetTooltipVEPKcP13__va_list_tag", ExactSpelling = true)]
        public static extern void SetTooltipV(byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10BeginPopupEPKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginPopup(byte* str_id, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15BeginPopupModalEPKcPbi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginPopupModal(byte* name, bool* p_open = null, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8EndPopupEv", ExactSpelling = true)]
        public static extern void EndPopup();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9OpenPopupEPKci", ExactSpelling = true)]
        public static extern void OpenPopup(byte* str_id, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20OpenPopupOnItemClickEPKci", ExactSpelling = true)]
        public static extern void OpenPopupOnItemClick(byte* str_id = null, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.MouseButtonRight);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17CloseCurrentPopupEv", ExactSpelling = true)]
        public static extern void CloseCurrentPopup();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21BeginPopupContextItemEPKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginPopupContextItem(byte* str_id = null, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.MouseButtonRight);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23BeginPopupContextWindowEPKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginPopupContextWindow(byte* str_id = null, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.MouseButtonRight);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21BeginPopupContextVoidEPKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginPopupContextVoid(byte* str_id = null, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.MouseButtonRight);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11IsPopupOpenEPKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsPopupOpen(byte* str_id, ImGuiPopupFlags flags = ImGuiPopupFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10BeginTableEPKciiRK6ImVec2f", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginTable(byte* str_id, int column, ImGuiTableFlags flags, ImVec2* outer_size, float inner_width = 0f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8EndTableEv", ExactSpelling = true)]
        public static extern void EndTable();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12TableNextRowEif", ExactSpelling = true)]
        public static extern void TableNextRow(ImGuiTableRowFlags row_flags = ImGuiTableRowFlags.None, float min_row_height = 0f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15TableNextColumnEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TableNextColumn();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19TableSetColumnIndexEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TableSetColumnIndex(int column_n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16TableSetupColumnEPKcifj", ExactSpelling = true)]
        public static extern void TableSetupColumn(byte* label, ImGuiTableColumnFlags flags = ImGuiTableColumnFlags.None, float init_width_or_weight = 0f, uint user_id = 0);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22TableSetupScrollFreezeEii", ExactSpelling = true)]
        public static extern void TableSetupScrollFreeze(int cols, int rows);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15TableHeadersRowEv", ExactSpelling = true)]
        public static extern void TableHeadersRow();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11TableHeaderEPKc", ExactSpelling = true)]
        public static extern void TableHeader(byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17TableGetSortSpecsEv", ExactSpelling = true)]
        public static extern ImGuiTableSortSpecs* TableGetSortSpecs();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19TableGetColumnCountEv", ExactSpelling = true)]
        public static extern int TableGetColumnCount();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19TableGetColumnIndexEv", ExactSpelling = true)]
        public static extern int TableGetColumnIndex();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16TableGetRowIndexEv", ExactSpelling = true)]
        public static extern int TableGetRowIndex();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18TableGetColumnNameEi", ExactSpelling = true)]
        public static extern byte* TableGetColumnName(int column_n = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19TableGetColumnFlagsEi", ExactSpelling = true)]
        public static extern ImGuiTableColumnFlags TableGetColumnFlags(int column_n = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15TableSetBgColorEiji", ExactSpelling = true)]
        public static extern void TableSetBgColor(ImGuiTableBgTarget target, uint color, int column_n = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7ColumnsEiPKcb", ExactSpelling = true)]
        public static extern void Columns(int count = 1, byte* id = null, [MarshalAs(UnmanagedType.I1)] bool border = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10NextColumnEv", ExactSpelling = true)]
        public static extern void NextColumn();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14GetColumnIndexEv", ExactSpelling = true)]
        public static extern int GetColumnIndex();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14GetColumnWidthEi", ExactSpelling = true)]
        public static extern float GetColumnWidth(int column_index = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14SetColumnWidthEif", ExactSpelling = true)]
        public static extern void SetColumnWidth(int column_index, float width);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15GetColumnOffsetEi", ExactSpelling = true)]
        public static extern float GetColumnOffset(int column_index = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15SetColumnOffsetEif", ExactSpelling = true)]
        public static extern void SetColumnOffset(int column_index, float offset_x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15GetColumnsCountEv", ExactSpelling = true)]
        public static extern int GetColumnsCount();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11BeginTabBarEPKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginTabBar(byte* str_id, ImGuiTabBarFlags flags = ImGuiTabBarFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9EndTabBarEv", ExactSpelling = true)]
        public static extern void EndTabBar();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12BeginTabItemEPKcPbi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginTabItem(byte* label, bool* p_open = null, ImGuiTabItemFlags flags = ImGuiTabItemFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10EndTabItemEv", ExactSpelling = true)]
        public static extern void EndTabItem();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13TabItemButtonEPKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TabItemButton(byte* label, ImGuiTabItemFlags flags = ImGuiTabItemFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16SetTabItemClosedEPKc", ExactSpelling = true)]
        public static extern void SetTabItemClosed(byte* tab_or_docked_window_label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9DockSpaceEjRK6ImVec2iPK16ImGuiWindowClass", ExactSpelling = true)]
        public static extern void DockSpace(uint id, ImVec2* size, ImGuiDockNodeFlags flags = ImGuiDockNodeFlags.None, ImGuiWindowClass* window_class = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21DockSpaceOverViewportEPK13ImGuiViewportiPK16ImGuiWindowClass", ExactSpelling = true)]
        public static extern uint DockSpaceOverViewport(ImGuiViewport* viewport = null, ImGuiDockNodeFlags flags = ImGuiDockNodeFlags.None, ImGuiWindowClass* window_class = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19SetNextWindowDockIDEji", ExactSpelling = true)]
        public static extern void SetNextWindowDockID(uint dock_id, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18SetNextWindowClassEPK16ImGuiWindowClass", ExactSpelling = true)]
        public static extern void SetNextWindowClass(ImGuiWindowClass* window_class);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15GetWindowDockIDEv", ExactSpelling = true)]
        public static extern uint GetWindowDockID();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14IsWindowDockedEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsWindowDocked();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8LogToTTYEi", ExactSpelling = true)]
        public static extern void LogToTTY(int auto_open_depth = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9LogToFileEiPKc", ExactSpelling = true)]
        public static extern void LogToFile(int auto_open_depth = -1, byte* filename = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14LogToClipboardEi", ExactSpelling = true)]
        public static extern void LogToClipboard(int auto_open_depth = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9LogFinishEv", ExactSpelling = true)]
        public static extern void LogFinish();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10LogButtonsEv", ExactSpelling = true)]
        public static extern void LogButtons();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7LogTextEPKcz", ExactSpelling = true)]
        public static extern void LogText(byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19BeginDragDropSourceEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginDragDropSource(ImGuiDragDropFlags flags = ImGuiDragDropFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18SetDragDropPayloadEPKcPKvmi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SetDragDropPayload(byte* type, void* data, ulong sz, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17EndDragDropSourceEv", ExactSpelling = true)]
        public static extern void EndDragDropSource();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19BeginDragDropTargetEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginDragDropTarget();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21AcceptDragDropPayloadEPKci", ExactSpelling = true)]
        public static extern ImGuiPayload* AcceptDragDropPayload(byte* type, ImGuiDragDropFlags flags = ImGuiDragDropFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17EndDragDropTargetEv", ExactSpelling = true)]
        public static extern void EndDragDropTarget();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18GetDragDropPayloadEv", ExactSpelling = true)]
        public static extern ImGuiPayload* GetDragDropPayload();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12PushClipRectERK6ImVec2S2_b", ExactSpelling = true)]
        public static extern void PushClipRect(ImVec2* clip_rect_min, ImVec2* clip_rect_max, [MarshalAs(UnmanagedType.I1)] bool intersect_with_current_clip_rect);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11PopClipRectEv", ExactSpelling = true)]
        public static extern void PopClipRect();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19SetItemDefaultFocusEv", ExactSpelling = true)]
        public static extern void SetItemDefaultFocus();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20SetKeyboardFocusHereEi", ExactSpelling = true)]
        public static extern void SetKeyboardFocusHere(int offset = 0);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13IsItemHoveredEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemHovered(ImGuiHoveredFlags flags = ImGuiHoveredFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12IsItemActiveEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemActive();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13IsItemFocusedEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemFocused();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13IsItemClickedEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemClicked(ImGuiMouseButton mouse_button = ImGuiMouseButton.Left);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13IsItemVisibleEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemVisible();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12IsItemEditedEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemEdited();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15IsItemActivatedEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemActivated();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17IsItemDeactivatedEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemDeactivated();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui26IsItemDeactivatedAfterEditEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemDeactivatedAfterEdit();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17IsItemToggledOpenEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemToggledOpen();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16IsAnyItemHoveredEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsAnyItemHovered();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15IsAnyItemActiveEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsAnyItemActive();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16IsAnyItemFocusedEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsAnyItemFocused();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14GetItemRectMinEv", ExactSpelling = true)]
        public static extern ImVec2 GetItemRectMin();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14GetItemRectMaxEv", ExactSpelling = true)]
        public static extern ImVec2 GetItemRectMax();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15GetItemRectSizeEv", ExactSpelling = true)]
        public static extern ImVec2 GetItemRectSize();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19SetItemAllowOverlapEv", ExactSpelling = true)]
        public static extern void SetItemAllowOverlap();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15GetMainViewportEv", ExactSpelling = true)]
        public static extern ImGuiViewport* GetMainViewport();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13IsRectVisibleERK6ImVec2", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsRectVisible(ImVec2* size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13IsRectVisibleERK6ImVec2S2_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsRectVisible(ImVec2* rect_min, ImVec2* rect_max);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7GetTimeEv", ExactSpelling = true)]
        public static extern double GetTime();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13GetFrameCountEv", ExactSpelling = true)]
        public static extern int GetFrameCount();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21GetBackgroundDrawListEv", ExactSpelling = true)]
        public static extern ImDrawList* GetBackgroundDrawList();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21GetForegroundDrawListEv", ExactSpelling = true)]
        public static extern ImDrawList* GetForegroundDrawList();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21GetBackgroundDrawListEP13ImGuiViewport", ExactSpelling = true)]
        public static extern ImDrawList* GetBackgroundDrawList(ImGuiViewport* viewport);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21GetForegroundDrawListEP13ImGuiViewport", ExactSpelling = true)]
        public static extern ImDrawList* GetForegroundDrawList(ImGuiViewport* viewport);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21GetDrawListSharedDataEv", ExactSpelling = true)]
        public static extern ImDrawListSharedData* GetDrawListSharedData();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetStyleColorNameEi", ExactSpelling = true)]
        public static extern byte* GetStyleColorName(ImGuiCol idx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15SetStateStorageEP12ImGuiStorage", ExactSpelling = true)]
        public static extern void SetStateStorage(ImGuiStorage* storage);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15GetStateStorageEv", ExactSpelling = true)]
        public static extern ImGuiStorage* GetStateStorage();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16CalcListClippingEifPiS0_", ExactSpelling = true)]
        public static extern void CalcListClipping(int items_count, float items_height, int* out_items_display_start, int* out_items_display_end);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15BeginChildFrameEjRK6ImVec2i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginChildFrame(uint id, ImVec2* size, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13EndChildFrameEv", ExactSpelling = true)]
        public static extern void EndChildFrame();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12CalcTextSizeEPKcS1_bf", ExactSpelling = true)]
        public static extern ImVec2 CalcTextSize(byte* text, byte* text_end = null, [MarshalAs(UnmanagedType.I1)] bool hide_text_after_double_hash = false, float wrap_width = -1f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23ColorConvertU32ToFloat4Ej", ExactSpelling = true)]
        public static extern ImVec4 ColorConvertU32ToFloat4(uint @in);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23ColorConvertFloat4ToU32ERK6ImVec4", ExactSpelling = true)]
        public static extern uint ColorConvertFloat4ToU32(ImVec4* @in);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20ColorConvertRGBtoHSVEfffRfS0_S0_", ExactSpelling = true)]
        public static extern void ColorConvertRGBtoHSV(float r, float g, float b, float* out_h, float* out_s, float* out_v);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20ColorConvertHSVtoRGBEfffRfS0_S0_", ExactSpelling = true)]
        public static extern void ColorConvertHSVtoRGB(float h, float s, float v, float* out_r, float* out_g, float* out_b);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11GetKeyIndexEi", ExactSpelling = true)]
        public static extern int GetKeyIndex(ImGuiKey imgui_key);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9IsKeyDownEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsKeyDown(int user_key_index);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12IsKeyPressedEib", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsKeyPressed(int user_key_index, [MarshalAs(UnmanagedType.I1)] bool repeat = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13IsKeyReleasedEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsKeyReleased(int user_key_index);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19GetKeyPressedAmountEiff", ExactSpelling = true)]
        public static extern int GetKeyPressedAmount(int key_index, float repeat_delay, float rate);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22CaptureKeyboardFromAppEb", ExactSpelling = true)]
        public static extern void CaptureKeyboardFromApp([MarshalAs(UnmanagedType.I1)] bool want_capture_keyboard_value = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11IsMouseDownEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsMouseDown(ImGuiMouseButton button);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14IsMouseClickedEib", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsMouseClicked(ImGuiMouseButton button, [MarshalAs(UnmanagedType.I1)] bool repeat = false);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15IsMouseReleasedEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsMouseReleased(ImGuiMouseButton button);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20IsMouseDoubleClickedEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsMouseDoubleClicked(ImGuiMouseButton button);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19IsMouseHoveringRectERK6ImVec2S2_b", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsMouseHoveringRect(ImVec2* r_min, ImVec2* r_max, [MarshalAs(UnmanagedType.I1)] bool clip = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15IsMousePosValidEPK6ImVec2", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsMousePosValid(ImVec2* mouse_pos = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14IsAnyMouseDownEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsAnyMouseDown();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11GetMousePosEv", ExactSpelling = true)]
        public static extern ImVec2 GetMousePos();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui32GetMousePosOnOpeningCurrentPopupEv", ExactSpelling = true)]
        public static extern ImVec2 GetMousePosOnOpeningCurrentPopup();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15IsMouseDraggingEif", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsMouseDragging(ImGuiMouseButton button, float lock_threshold = -1f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetMouseDragDeltaEif", ExactSpelling = true)]
        public static extern ImVec2 GetMouseDragDelta(ImGuiMouseButton button = ImGuiMouseButton.Left, float lock_threshold = -1f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19ResetMouseDragDeltaEi", ExactSpelling = true)]
        public static extern void ResetMouseDragDelta(ImGuiMouseButton button = ImGuiMouseButton.Left);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14GetMouseCursorEv", ExactSpelling = true)]
        public static extern ImGuiMouseCursor GetMouseCursor();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14SetMouseCursorEi", ExactSpelling = true)]
        public static extern void SetMouseCursor(ImGuiMouseCursor cursor_type);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19CaptureMouseFromAppEb", ExactSpelling = true)]
        public static extern void CaptureMouseFromApp([MarshalAs(UnmanagedType.I1)] bool want_capture_mouse_value = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16GetClipboardTextEv", ExactSpelling = true)]
        public static extern byte* GetClipboardText();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16SetClipboardTextEPKc", ExactSpelling = true)]
        public static extern void SetClipboardText(byte* text);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23LoadIniSettingsFromDiskEPKc", ExactSpelling = true)]
        public static extern void LoadIniSettingsFromDisk(byte* ini_filename);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25LoadIniSettingsFromMemoryEPKcm", ExactSpelling = true)]
        public static extern void LoadIniSettingsFromMemory(byte* ini_data, ulong ini_size = 0);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21SaveIniSettingsToDiskEPKc", ExactSpelling = true)]
        public static extern void SaveIniSettingsToDisk(byte* ini_filename);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23SaveIniSettingsToMemoryEPm", ExactSpelling = true)]
        public static extern byte* SaveIniSettingsToMemory(ulong* out_ini_size = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui30DebugCheckVersionAndDataLayoutEPKcmmmmmm", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DebugCheckVersionAndDataLayout(byte* version_str, ulong sz_io, ulong sz_style, ulong sz_vec2, ulong sz_vec4, ulong sz_drawvert, ulong sz_drawidx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21SetAllocatorFunctionsEPFPvmS0_EPFvS0_S0_ES0_", ExactSpelling = true)]
        public static extern void SetAllocatorFunctions(delegate* unmanaged[Cdecl]<ulong, void*, void*> alloc_func, delegate* unmanaged[Cdecl]<void*, void*, void> free_func, void* user_data = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8MemAllocEm", ExactSpelling = true)]
        public static extern void* MemAlloc(ulong size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7MemFreeEPv", ExactSpelling = true)]
        public static extern void MemFree(void* ptr);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13GetPlatformIOEv", ExactSpelling = true)]
        public static extern ImGuiPlatformIO* GetPlatformIO();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21UpdatePlatformWindowsEv", ExactSpelling = true)]
        public static extern void UpdatePlatformWindows();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui28RenderPlatformWindowsDefaultEPvS0_", ExactSpelling = true)]
        public static extern void RenderPlatformWindowsDefault(void* platform_render_arg = null, void* renderer_render_arg = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22DestroyPlatformWindowsEv", ExactSpelling = true)]
        public static extern void DestroyPlatformWindows();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16FindViewportByIDEj", ExactSpelling = true)]
        public static extern ImGuiViewport* FindViewportByID(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui28FindViewportByPlatformHandleEPv", ExactSpelling = true)]
        public static extern ImGuiViewport* FindViewportByPlatformHandle(void* platform_handle);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Znwm12ImNewWrapperPv", ExactSpelling = true)]
        public static extern void* operator_New(ulong arg0, ImNewWrapper arg1, void* ptr);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZdlPv12ImNewWrapperS_", ExactSpelling = true)]
        public static extern void operator_Delete(void* arg0, ImNewWrapper arg1, void* arg2);
    }
}
