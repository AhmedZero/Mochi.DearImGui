// This file was automatically generated by Biohazrd and should not be modified by hand!
using System.Runtime.InteropServices;

[StructLayout(LayoutKind.Explicit, Size = 5464)]
public unsafe partial struct ImGuiIO
{
    [FieldOffset(0)] public ImGuiConfigFlags ConfigFlags;

    [FieldOffset(4)] public ImGuiBackendFlags BackendFlags;

    [FieldOffset(8)] public ImVec2 DisplaySize;

    [FieldOffset(16)] public float DeltaTime;

    [FieldOffset(20)] public float IniSavingRate;

    [FieldOffset(24)] public byte* IniFilename;

    [FieldOffset(32)] public byte* LogFilename;

    [FieldOffset(40)] public float MouseDoubleClickTime;

    [FieldOffset(44)] public float MouseDoubleClickMaxDist;

    [FieldOffset(48)] public float MouseDragThreshold;

    [FieldOffset(52)] public ConstantArray_int_22 KeyMap;

    [FieldOffset(140)] public float KeyRepeatDelay;

    [FieldOffset(144)] public float KeyRepeatRate;

    [FieldOffset(152)] public void* UserData;

    [FieldOffset(160)] public ImFontAtlas* Fonts;

    [FieldOffset(168)] public float FontGlobalScale;

    [FieldOffset(172)] [MarshalAs(UnmanagedType.I1)] public bool FontAllowUserScaling;

    [FieldOffset(176)] public ImFont* FontDefault;

    [FieldOffset(184)] public ImVec2 DisplayFramebufferScale;

    [FieldOffset(192)] [MarshalAs(UnmanagedType.I1)] public bool ConfigDockingNoSplit;

    [FieldOffset(193)] [MarshalAs(UnmanagedType.I1)] public bool ConfigDockingWithShift;

    [FieldOffset(194)] [MarshalAs(UnmanagedType.I1)] public bool ConfigDockingAlwaysTabBar;

    [FieldOffset(195)] [MarshalAs(UnmanagedType.I1)] public bool ConfigDockingTransparentPayload;

    [FieldOffset(196)] [MarshalAs(UnmanagedType.I1)] public bool ConfigViewportsNoAutoMerge;

    [FieldOffset(197)] [MarshalAs(UnmanagedType.I1)] public bool ConfigViewportsNoTaskBarIcon;

    [FieldOffset(198)] [MarshalAs(UnmanagedType.I1)] public bool ConfigViewportsNoDecoration;

    [FieldOffset(199)] [MarshalAs(UnmanagedType.I1)] public bool ConfigViewportsNoDefaultParent;

    [FieldOffset(200)] [MarshalAs(UnmanagedType.I1)] public bool MouseDrawCursor;

    [FieldOffset(201)] [MarshalAs(UnmanagedType.I1)] public bool ConfigMacOSXBehaviors;

    [FieldOffset(202)] [MarshalAs(UnmanagedType.I1)] public bool ConfigInputTextCursorBlink;

    [FieldOffset(203)] [MarshalAs(UnmanagedType.I1)] public bool ConfigWindowsResizeFromEdges;

    [FieldOffset(204)] [MarshalAs(UnmanagedType.I1)] public bool ConfigWindowsMoveFromTitleBarOnly;

    [FieldOffset(208)] public float ConfigWindowsMemoryCompactTimer;

    [FieldOffset(216)] public byte* BackendPlatformName;

    [FieldOffset(224)] public byte* BackendRendererName;

    [FieldOffset(232)] public void* BackendPlatformUserData;

    [FieldOffset(240)] public void* BackendRendererUserData;

    [FieldOffset(248)] public void* BackendLanguageUserData;

    [FieldOffset(256)] public delegate* unmanaged[Cdecl]<void*, byte*>* GetClipboardTextFn;

    [FieldOffset(264)] public delegate* unmanaged[Cdecl]<void*, byte*, void>* SetClipboardTextFn;

    [FieldOffset(272)] public void* ClipboardUserData;

    [FieldOffset(280)] public void* RenderDrawListsFnUnused;

    [FieldOffset(288)] public ImVec2 MousePos;

    [FieldOffset(296)] public ConstantArray_bool_5 MouseDown;

    [FieldOffset(304)] public float MouseWheel;

    [FieldOffset(308)] public float MouseWheelH;

    [FieldOffset(312)] public uint MouseHoveredViewport;

    [FieldOffset(316)] [MarshalAs(UnmanagedType.I1)] public bool KeyCtrl;

    [FieldOffset(317)] [MarshalAs(UnmanagedType.I1)] public bool KeyShift;

    [FieldOffset(318)] [MarshalAs(UnmanagedType.I1)] public bool KeyAlt;

    [FieldOffset(319)] [MarshalAs(UnmanagedType.I1)] public bool KeySuper;

    [FieldOffset(320)] public ConstantArray_bool_512 KeysDown;

    [FieldOffset(832)] public ConstantArray_float_21 NavInputs;

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?AddInputCharacter@ImGuiIO@@QEAAXI@Z", ExactSpelling = true)]
    private static extern void AddInputCharacter_PInvoke(ImGuiIO* @this, uint c);

    public unsafe void AddInputCharacter(uint c)
    {
        fixed (ImGuiIO* @this = &this)
        { AddInputCharacter_PInvoke(@this, c); }
    }

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z", ExactSpelling = true)]
    private static extern void AddInputCharacterUTF16_PInvoke(ImGuiIO* @this, ushort c);

    public unsafe void AddInputCharacterUTF16(ushort c)
    {
        fixed (ImGuiIO* @this = &this)
        { AddInputCharacterUTF16_PInvoke(@this, c); }
    }

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z", ExactSpelling = true)]
    private static extern void AddInputCharactersUTF8_PInvoke(ImGuiIO* @this, byte* str);

    public unsafe void AddInputCharactersUTF8(byte* str)
    {
        fixed (ImGuiIO* @this = &this)
        { AddInputCharactersUTF8_PInvoke(@this, str); }
    }

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ClearInputCharacters@ImGuiIO@@QEAAXXZ", ExactSpelling = true)]
    private static extern void ClearInputCharacters_PInvoke(ImGuiIO* @this);

    public unsafe void ClearInputCharacters()
    {
        fixed (ImGuiIO* @this = &this)
        { ClearInputCharacters_PInvoke(@this); }
    }

    [FieldOffset(916)] [MarshalAs(UnmanagedType.I1)] public bool WantCaptureMouse;

    [FieldOffset(917)] [MarshalAs(UnmanagedType.I1)] public bool WantCaptureKeyboard;

    [FieldOffset(918)] [MarshalAs(UnmanagedType.I1)] public bool WantTextInput;

    [FieldOffset(919)] [MarshalAs(UnmanagedType.I1)] public bool WantSetMousePos;

    [FieldOffset(920)] [MarshalAs(UnmanagedType.I1)] public bool WantSaveIniSettings;

    [FieldOffset(921)] [MarshalAs(UnmanagedType.I1)] public bool NavActive;

    [FieldOffset(922)] [MarshalAs(UnmanagedType.I1)] public bool NavVisible;

    [FieldOffset(924)] public float Framerate;

    [FieldOffset(928)] public int MetricsRenderVertices;

    [FieldOffset(932)] public int MetricsRenderIndices;

    [FieldOffset(936)] public int MetricsRenderWindows;

    [FieldOffset(940)] public int MetricsActiveWindows;

    [FieldOffset(944)] public int MetricsActiveAllocations;

    [FieldOffset(948)] public ImVec2 MouseDelta;

    [FieldOffset(956)] public ImGuiKeyModFlags KeyMods;

    [FieldOffset(960)] public ImVec2 MousePosPrev;

    [FieldOffset(968)] public ConstantArray_ImVec2_5 MouseClickedPos;

    [FieldOffset(1008)] public ConstantArray_double_5 MouseClickedTime;

    [FieldOffset(1048)] public ConstantArray_bool_5 MouseClicked;

    [FieldOffset(1053)] public ConstantArray_bool_5 MouseDoubleClicked;

    [FieldOffset(1058)] public ConstantArray_bool_5 MouseReleased;

    [FieldOffset(1063)] public ConstantArray_bool_5 MouseDownOwned;

    [FieldOffset(1068)] public ConstantArray_bool_5 MouseDownWasDoubleClick;

    [FieldOffset(1076)] public ConstantArray_float_5 MouseDownDuration;

    [FieldOffset(1096)] public ConstantArray_float_5 MouseDownDurationPrev;

    [FieldOffset(1116)] public ConstantArray_ImVec2_5 MouseDragMaxDistanceAbs;

    [FieldOffset(1156)] public ConstantArray_float_5 MouseDragMaxDistanceSqr;

    [FieldOffset(1176)] public ConstantArray_float_512 KeysDownDuration;

    [FieldOffset(3224)] public ConstantArray_float_512 KeysDownDurationPrev;

    [FieldOffset(5272)] public ConstantArray_float_21 NavInputsDownDuration;

    [FieldOffset(5356)] public ConstantArray_float_21 NavInputsDownDurationPrev;

    [FieldOffset(5440)] public float PenPressure;

    [FieldOffset(5444)] public ushort InputQueueSurrogate;

    [FieldOffset(5448)] public ImVector<ushort> InputQueueCharacters;

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0ImGuiIO@@QEAA@XZ", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(ImGuiIO* @this);

    public unsafe void Constructor()
    {
        fixed (ImGuiIO* @this = &this)
        { Constructor_PInvoke(@this); }
    }
}
