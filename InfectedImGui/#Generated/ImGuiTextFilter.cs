// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using InfectedImGui.Infrastructure;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace InfectedImGui
{
    [StructLayout(LayoutKind.Explicit, Size = 280)]
    public unsafe partial struct ImGuiTextFilter
    {
        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN15ImGuiTextFilterC1EPKc", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImGuiTextFilter* @this, byte* default_filter);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(byte* default_filter)
        {
            fixed (ImGuiTextFilter* @this = &this)
            { Constructor_PInvoke(@this, default_filter); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN15ImGuiTextFilter4DrawEPKcf", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool Draw_PInvoke(ImGuiTextFilter* @this, byte* label, float width);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool Draw(byte* label, float width = 0f)
        {
            fixed (ImGuiTextFilter* @this = &this)
            { return Draw_PInvoke(@this, label, width); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK15ImGuiTextFilter10PassFilterEPKcS1_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool PassFilter_PInvoke(ImGuiTextFilter* @this, byte* text, byte* text_end);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool PassFilter(byte* text, byte* text_end = null)
        {
            fixed (ImGuiTextFilter* @this = &this)
            { return PassFilter_PInvoke(@this, text, text_end); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN15ImGuiTextFilter5BuildEv", ExactSpelling = true)]
        private static extern void Build_PInvoke(ImGuiTextFilter* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Build()
        {
            fixed (ImGuiTextFilter* @this = &this)
            { Build_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN15ImGuiTextFilter5ClearEv", ExactSpelling = true)]
        private static extern void Clear_PInvoke(ImGuiTextFilter* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Clear()
        {
            fixed (ImGuiTextFilter* @this = &this)
            { Clear_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK15ImGuiTextFilter8IsActiveEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool IsActive_PInvoke(ImGuiTextFilter* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool IsActive()
        {
            fixed (ImGuiTextFilter* @this = &this)
            { return IsActive_PInvoke(@this); }
        }

        [StructLayout(LayoutKind.Explicit, Size = 16)]
        public unsafe partial struct ImGuiTextRange
        {
            [FieldOffset(0)] public byte* b;

            [FieldOffset(8)] public byte* e;

            [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper9", ExactSpelling = true)]
            private static extern void Constructor_PInvoke(ImGuiTextRange* @this);

            [DebuggerStepThrough, DebuggerHidden]
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public void Constructor()
            {
                fixed (ImGuiTextRange* @this = &this)
                { Constructor_PInvoke(@this); }
            }

            [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper10", ExactSpelling = true)]
            private static extern void Constructor_PInvoke(ImGuiTextRange* @this, byte* _b, byte* _e);

            [DebuggerStepThrough, DebuggerHidden]
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public void Constructor(byte* _b, byte* _e)
            {
                fixed (ImGuiTextRange* @this = &this)
                { Constructor_PInvoke(@this, _b, _e); }
            }

            [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK15ImGuiTextFilter14ImGuiTextRange5emptyEv", ExactSpelling = true)]
            [return: MarshalAs(UnmanagedType.I1)]
            private static extern bool empty_PInvoke(ImGuiTextRange* @this);

            [DebuggerStepThrough, DebuggerHidden]
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public bool empty()
            {
                fixed (ImGuiTextRange* @this = &this)
                { return empty_PInvoke(@this); }
            }

            [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK15ImGuiTextFilter14ImGuiTextRange5splitEcP8ImVectorIS0_E", ExactSpelling = true)]
            private static extern void split_PInvoke(ImGuiTextRange* @this, byte separator, ImVector<ImGuiTextRange>* @out);

            [DebuggerStepThrough, DebuggerHidden]
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public void split(byte separator, ImVector<ImGuiTextRange>* @out)
            {
                fixed (ImGuiTextRange* @this = &this)
                { split_PInvoke(@this, separator, @out); }
            }
        }

        [FieldOffset(0)] public ConstantArray_char_256 InputBuf;

        [FieldOffset(256)] public ImVector<ImGuiTextRange> Filters;

        [FieldOffset(272)] public int CountGrep;
    }
}
