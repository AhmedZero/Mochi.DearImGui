// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using InfectedImGui.Infrastructure;
using System.Runtime.InteropServices;

namespace InfectedImGui.Internal
{
    public unsafe static partial class ImGuiInternal
    {
        public static readonly ImGuiContext** GImGui = (ImGuiContext**)NativeLibrary.GetExport(NativeLibrary.Load("libInfectedImGui.Native.so"), "GImGui");

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z10ImHashDataPKvmj", ExactSpelling = true)]
        public static extern uint ImHashData(void* data, ulong data_size, uint seed = 0);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z9ImHashStrPKcmj", ExactSpelling = true)]
        public static extern uint ImHashStr(byte* data, ulong data_size = 0, uint seed = 0);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z18ImAlphaBlendColorsjj", ExactSpelling = true)]
        public static extern uint ImAlphaBlendColors(uint col_a, uint col_b);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper70", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ImIsPowerOfTwo(int v);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper71", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ImIsPowerOfTwo(ulong v);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper72", ExactSpelling = true)]
        public static extern int ImUpperPowerOfTwo(int v);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z9ImStricmpPKcS0_", ExactSpelling = true)]
        public static extern int ImStricmp(byte* str1, byte* str2);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z10ImStrnicmpPKcS0_m", ExactSpelling = true)]
        public static extern int ImStrnicmp(byte* str1, byte* str2, ulong count);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z9ImStrncpyPcPKcm", ExactSpelling = true)]
        public static extern void ImStrncpy(byte* dst, byte* src, ulong count);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z8ImStrdupPKc", ExactSpelling = true)]
        public static extern byte* ImStrdup(byte* str);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z11ImStrdupcpyPcPmPKc", ExactSpelling = true)]
        public static extern byte* ImStrdupcpy(byte* dst, ulong* p_dst_size, byte* str);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z13ImStrchrRangePKcS0_c", ExactSpelling = true)]
        public static extern byte* ImStrchrRange(byte* str_begin, byte* str_end, byte c);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z9ImStrlenWPKt", ExactSpelling = true)]
        public static extern int ImStrlenW(char* str);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z13ImStreolRangePKcS0_", ExactSpelling = true)]
        public static extern byte* ImStreolRange(byte* str, byte* str_end);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z9ImStrbolWPKtS0_", ExactSpelling = true)]
        public static extern char* ImStrbolW(char* buf_mid_line, char* buf_begin);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z9ImStristrPKcS0_S0_S0_", ExactSpelling = true)]
        public static extern byte* ImStristr(byte* haystack, byte* haystack_end, byte* needle, byte* needle_end);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z15ImStrTrimBlanksPc", ExactSpelling = true)]
        public static extern void ImStrTrimBlanks(byte* str);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z14ImStrSkipBlankPKc", ExactSpelling = true)]
        public static extern byte* ImStrSkipBlank(byte* str);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z14ImFormatStringPcmPKcz", ExactSpelling = true)]
        public static extern int ImFormatString(byte* buf, ulong buf_size, byte* fmt);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z15ImFormatStringVPcmPKcP13__va_list_tag", ExactSpelling = true)]
        public static extern int ImFormatStringV(byte* buf, ulong buf_size, byte* fmt, ConstantArray___va_list_tag_1* args);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z22ImParseFormatFindStartPKc", ExactSpelling = true)]
        public static extern byte* ImParseFormatFindStart(byte* format);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z20ImParseFormatFindEndPKc", ExactSpelling = true)]
        public static extern byte* ImParseFormatFindEnd(byte* format);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z28ImParseFormatTrimDecorationsPKcPcm", ExactSpelling = true)]
        public static extern byte* ImParseFormatTrimDecorations(byte* format, byte* buf, ulong buf_size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z22ImParseFormatPrecisionPKci", ExactSpelling = true)]
        public static extern int ImParseFormatPrecision(byte* format, int default_value);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper73", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ImCharIsBlankA(byte c);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper74", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ImCharIsBlankW(uint c);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z15ImTextStrToUtf8PciPKtS1_", ExactSpelling = true)]
        public static extern int ImTextStrToUtf8(byte* buf, int buf_size, char* in_text, char* in_text_end);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z18ImTextCharFromUtf8PjPKcS1_", ExactSpelling = true)]
        public static extern int ImTextCharFromUtf8(uint* out_char, byte* in_text, byte* in_text_end);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z17ImTextStrFromUtf8PtiPKcS1_PS1_", ExactSpelling = true)]
        public static extern int ImTextStrFromUtf8(char* buf, int buf_size, byte* in_text, byte* in_text_end, byte** in_remaining = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z24ImTextCountCharsFromUtf8PKcS0_", ExactSpelling = true)]
        public static extern int ImTextCountCharsFromUtf8(byte* in_text, byte* in_text_end);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z28ImTextCountUtf8BytesFromCharPKcS0_", ExactSpelling = true)]
        public static extern int ImTextCountUtf8BytesFromChar(byte* in_text, byte* in_text_end);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z27ImTextCountUtf8BytesFromStrPKtS0_", ExactSpelling = true)]
        public static extern int ImTextCountUtf8BytesFromStr(char* in_text, char* in_text_end);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z10ImFileOpenPKcS0_", ExactSpelling = true)]
        public static extern void* ImFileOpen(byte* filename, byte* mode);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z11ImFileCloseP8_IO_FILE", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ImFileClose(void* file);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z13ImFileGetSizeP8_IO_FILE", ExactSpelling = true)]
        public static extern ulong ImFileGetSize(void* file);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z10ImFileReadPvyyP8_IO_FILE", ExactSpelling = true)]
        public static extern ulong ImFileRead(void* data, ulong size, ulong count, void* file);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z11ImFileWritePKvyyP8_IO_FILE", ExactSpelling = true)]
        public static extern ulong ImFileWrite(void* data, ulong size, ulong count, void* file);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z18ImFileLoadToMemoryPKcS0_Pmi", ExactSpelling = true)]
        public static extern void* ImFileLoadToMemory(byte* filename, byte* mode, ulong* out_file_size = null, int padding_bytes = 0);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper75", ExactSpelling = true)]
        public static extern float ImPow(float x, float y);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper76", ExactSpelling = true)]
        public static extern double ImPow(double x, double y);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper77", ExactSpelling = true)]
        public static extern float ImLog(float x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper78", ExactSpelling = true)]
        public static extern double ImLog(double x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper79", ExactSpelling = true)]
        public static extern float ImAbs(float x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper80", ExactSpelling = true)]
        public static extern double ImAbs(double x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper81", ExactSpelling = true)]
        public static extern float ImSign(float x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper82", ExactSpelling = true)]
        public static extern double ImSign(double x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper83", ExactSpelling = true)]
        public static extern ImVec2 ImMin(ImVec2* lhs, ImVec2* rhs);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper84", ExactSpelling = true)]
        public static extern ImVec2 ImMax(ImVec2* lhs, ImVec2* rhs);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper85", ExactSpelling = true)]
        public static extern ImVec2 ImClamp(ImVec2* v, ImVec2* mn, ImVec2 mx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper86", ExactSpelling = true)]
        public static extern ImVec2 ImLerp(ImVec2* a, ImVec2* b, float t);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper87", ExactSpelling = true)]
        public static extern ImVec2 ImLerp(ImVec2* a, ImVec2* b, ImVec2* t);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper88", ExactSpelling = true)]
        public static extern ImVec4 ImLerp(ImVec4* a, ImVec4* b, float t);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper89", ExactSpelling = true)]
        public static extern float ImSaturate(float f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper90", ExactSpelling = true)]
        public static extern float ImLengthSqr(ImVec2* lhs);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper91", ExactSpelling = true)]
        public static extern float ImLengthSqr(ImVec4* lhs);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper92", ExactSpelling = true)]
        public static extern float ImInvLength(ImVec2* lhs, float fail_value);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper93", ExactSpelling = true)]
        public static extern float ImFloor(float f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper94", ExactSpelling = true)]
        public static extern ImVec2 ImFloor(ImVec2* v);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper95", ExactSpelling = true)]
        public static extern int ImModPositive(int a, int b);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper96", ExactSpelling = true)]
        public static extern float ImDot(ImVec2* a, ImVec2* b);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper97", ExactSpelling = true)]
        public static extern ImVec2 ImRotate(ImVec2* v, float cos_a, float sin_a);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper98", ExactSpelling = true)]
        public static extern float ImLinearSweep(float current, float target, float speed);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper99", ExactSpelling = true)]
        public static extern ImVec2 ImMul(ImVec2* lhs, ImVec2* rhs);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z17ImBezierCubicCalcRK6ImVec2S1_S1_S1_f", ExactSpelling = true)]
        public static extern ImVec2 ImBezierCubicCalc(ImVec2* p1, ImVec2* p2, ImVec2* p3, ImVec2* p4, float t);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z25ImBezierCubicClosestPointRK6ImVec2S1_S1_S1_S1_i", ExactSpelling = true)]
        public static extern ImVec2 ImBezierCubicClosestPoint(ImVec2* p1, ImVec2* p2, ImVec2* p3, ImVec2* p4, ImVec2* p, int num_segments);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z34ImBezierCubicClosestPointCasteljauRK6ImVec2S1_S1_S1_S1_f", ExactSpelling = true)]
        public static extern ImVec2 ImBezierCubicClosestPointCasteljau(ImVec2* p1, ImVec2* p2, ImVec2* p3, ImVec2* p4, ImVec2* p, float tess_tol);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z21ImBezierQuadraticCalcRK6ImVec2S1_S1_f", ExactSpelling = true)]
        public static extern ImVec2 ImBezierQuadraticCalc(ImVec2* p1, ImVec2* p2, ImVec2* p3, float t);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z18ImLineClosestPointRK6ImVec2S1_S1_", ExactSpelling = true)]
        public static extern ImVec2 ImLineClosestPoint(ImVec2* a, ImVec2* b, ImVec2* p);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z23ImTriangleContainsPointRK6ImVec2S1_S1_S1_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ImTriangleContainsPoint(ImVec2* a, ImVec2* b, ImVec2* c, ImVec2* p);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z22ImTriangleClosestPointRK6ImVec2S1_S1_S1_", ExactSpelling = true)]
        public static extern ImVec2 ImTriangleClosestPoint(ImVec2* a, ImVec2* b, ImVec2* c, ImVec2* p);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z27ImTriangleBarycentricCoordsRK6ImVec2S1_S1_S1_RfS2_S2_", ExactSpelling = true)]
        public static extern void ImTriangleBarycentricCoords(ImVec2* a, ImVec2* b, ImVec2* c, ImVec2* p, float* out_u, float* out_v, float* out_w);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z14ImTriangleAreaRK6ImVec2S1_S1_", ExactSpelling = true)]
        public static extern float ImTriangleArea(ImVec2* a, ImVec2* b, ImVec2* c);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z25ImGetDirQuadrantFromDeltaff", ExactSpelling = true)]
        public static extern ImGuiDir ImGetDirQuadrantFromDelta(float dx, float dy);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z17ImBitArrayTestBitPKji", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ImBitArrayTestBit(uint* arr, int n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z18ImBitArrayClearBitPji", ExactSpelling = true)]
        public static extern void ImBitArrayClearBit(uint* arr, int n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z16ImBitArraySetBitPji", ExactSpelling = true)]
        public static extern void ImBitArraySetBit(uint* arr, int n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z21ImBitArraySetBitRangePjii", ExactSpelling = true)]
        public static extern void ImBitArraySetBitRange(uint* arr, int n, int n2);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20GetCurrentWindowReadEv", ExactSpelling = true)]
        public static extern ImGuiWindow* GetCurrentWindowRead();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16GetCurrentWindowEv", ExactSpelling = true)]
        public static extern ImGuiWindow* GetCurrentWindow();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14FindWindowByIDEj", ExactSpelling = true)]
        public static extern ImGuiWindow* FindWindowByID(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16FindWindowByNameEPKc", ExactSpelling = true)]
        public static extern ImGuiWindow* FindWindowByName(byte* name);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui30UpdateWindowParentAndRootLinksEP11ImGuiWindowiS1_", ExactSpelling = true)]
        public static extern void UpdateWindowParentAndRootLinks(ImGuiWindow* window, ImGuiWindowFlags flags, ImGuiWindow* parent_window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25CalcWindowNextAutoFitSizeEP11ImGuiWindow", ExactSpelling = true)]
        public static extern ImVec2 CalcWindowNextAutoFitSize(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15IsWindowChildOfEP11ImGuiWindowS1_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsWindowChildOf(ImGuiWindow* window, ImGuiWindow* potential_parent);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13IsWindowAboveEP11ImGuiWindowS1_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsWindowAbove(ImGuiWindow* potential_above, ImGuiWindow* potential_below);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20IsWindowNavFocusableEP11ImGuiWindow", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsWindowNavFocusable(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui26GetWindowAllowedExtentRectEP11ImGuiWindow", ExactSpelling = true)]
        public static extern ImRect GetWindowAllowedExtentRect(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12SetWindowPosEP11ImGuiWindowRK6ImVec2i", ExactSpelling = true)]
        public static extern void SetWindowPos(ImGuiWindow* window, ImVec2* pos, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13SetWindowSizeEP11ImGuiWindowRK6ImVec2i", ExactSpelling = true)]
        public static extern void SetWindowSize(ImGuiWindow* window, ImVec2* size, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18SetWindowCollapsedEP11ImGuiWindowbi", ExactSpelling = true)]
        public static extern void SetWindowCollapsed(ImGuiWindow* window, [MarshalAs(UnmanagedType.I1)] bool collapsed, ImGuiCond cond = ImGuiCond.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20SetWindowHitTestHoleEP11ImGuiWindowRK6ImVec2S4_", ExactSpelling = true)]
        public static extern void SetWindowHitTestHole(ImGuiWindow* window, ImVec2* pos, ImVec2* size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11FocusWindowEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void FocusWindow(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui26FocusTopMostWindowUnderOneEP11ImGuiWindowS1_", ExactSpelling = true)]
        public static extern void FocusTopMostWindowUnderOne(ImGuiWindow* under_this_window, ImGuiWindow* ignore_window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23BringWindowToFocusFrontEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void BringWindowToFocusFront(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25BringWindowToDisplayFrontEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void BringWindowToDisplayFront(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui24BringWindowToDisplayBackEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void BringWindowToDisplayBack(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14SetCurrentFontEP6ImFont", ExactSpelling = true)]
        public static extern void SetCurrentFont(ImFont* font);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14GetDefaultFontEv", ExactSpelling = true)]
        public static extern ImFont* GetDefaultFont();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21GetForegroundDrawListEP11ImGuiWindow", ExactSpelling = true)]
        public static extern ImDrawList* GetForegroundDrawList(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10InitializeEP12ImGuiContext", ExactSpelling = true)]
        public static extern void Initialize(ImGuiContext* context);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8ShutdownEP12ImGuiContext", ExactSpelling = true)]
        public static extern void Shutdown(ImGuiContext* context);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui34UpdateHoveredWindowAndCaptureFlagsEv", ExactSpelling = true)]
        public static extern void UpdateHoveredWindowAndCaptureFlags();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22StartMouseMovingWindowEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void StartMouseMovingWindow(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui28StartMouseMovingWindowOrNodeEP11ImGuiWindowP13ImGuiDockNodeb", ExactSpelling = true)]
        public static extern void StartMouseMovingWindowOrNode(ImGuiWindow* window, ImGuiDockNode* node, [MarshalAs(UnmanagedType.I1)] bool undock_floating_node);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui31UpdateMouseMovingWindowNewFrameEv", ExactSpelling = true)]
        public static extern void UpdateMouseMovingWindowNewFrame();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui31UpdateMouseMovingWindowEndFrameEv", ExactSpelling = true)]
        public static extern void UpdateMouseMovingWindowEndFrame();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14AddContextHookEP12ImGuiContextPK16ImGuiContextHook", ExactSpelling = true)]
        public static extern uint AddContextHook(ImGuiContext* context, ImGuiContextHook* hook);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17RemoveContextHookEP12ImGuiContextj", ExactSpelling = true)]
        public static extern void RemoveContextHook(ImGuiContext* context, uint hook_to_remove);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16CallContextHooksEP12ImGuiContext20ImGuiContextHookType", ExactSpelling = true)]
        public static extern void CallContextHooks(ImGuiContext* context, ImGuiContextHookType type);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui26TranslateWindowsInViewportEP14ImGuiViewportPRK6ImVec2S4_", ExactSpelling = true)]
        public static extern void TranslateWindowsInViewport(ImGuiViewportP* viewport, ImVec2* old_pos, ImVec2* new_pos);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22ScaleWindowsInViewportEP14ImGuiViewportPf", ExactSpelling = true)]
        public static extern void ScaleWindowsInViewport(ImGuiViewportP* viewport, float scale);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21DestroyPlatformWindowEP14ImGuiViewportP", ExactSpelling = true)]
        public static extern void DestroyPlatformWindow(ImGuiViewportP* viewport);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20MarkIniSettingsDirtyEv", ExactSpelling = true)]
        public static extern void MarkIniSettingsDirty();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20MarkIniSettingsDirtyEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void MarkIniSettingsDirty(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16ClearIniSettingsEv", ExactSpelling = true)]
        public static extern void ClearIniSettings();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23CreateNewWindowSettingsEPKc", ExactSpelling = true)]
        public static extern ImGuiWindowSettings* CreateNewWindowSettings(byte* name);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18FindWindowSettingsEj", ExactSpelling = true)]
        public static extern ImGuiWindowSettings* FindWindowSettings(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui26FindOrCreateWindowSettingsEPKc", ExactSpelling = true)]
        public static extern ImGuiWindowSettings* FindOrCreateWindowSettings(byte* name);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19FindSettingsHandlerEPKc", ExactSpelling = true)]
        public static extern ImGuiSettingsHandler* FindSettingsHandler(byte* type_name);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19SetNextWindowScrollERK6ImVec2", ExactSpelling = true)]
        public static extern void SetNextWindowScroll(ImVec2* scroll);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SetScrollXEP11ImGuiWindowf", ExactSpelling = true)]
        public static extern void SetScrollX(ImGuiWindow* window, float scroll_x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SetScrollYEP11ImGuiWindowf", ExactSpelling = true)]
        public static extern void SetScrollY(ImGuiWindow* window, float scroll_y);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17SetScrollFromPosXEP11ImGuiWindowff", ExactSpelling = true)]
        public static extern void SetScrollFromPosX(ImGuiWindow* window, float local_x, float center_x_ratio);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17SetScrollFromPosYEP11ImGuiWindowff", ExactSpelling = true)]
        public static extern void SetScrollFromPosY(ImGuiWindow* window, float local_y, float center_y_ratio);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25ScrollToBringRectIntoViewEP11ImGuiWindowRK6ImRect", ExactSpelling = true)]
        public static extern ImVec2 ScrollToBringRectIntoView(ImGuiWindow* window, ImRect* item_rect);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9GetItemIDEv", ExactSpelling = true)]
        public static extern uint GetItemID();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18GetItemStatusFlagsEv", ExactSpelling = true)]
        public static extern ImGuiItemStatusFlags GetItemStatusFlags();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11GetActiveIDEv", ExactSpelling = true)]
        public static extern uint GetActiveID();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10GetFocusIDEv", ExactSpelling = true)]
        public static extern uint GetFocusID();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13GetItemsFlagsEv", ExactSpelling = true)]
        public static extern ImGuiItemFlags GetItemsFlags();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11SetActiveIDEjP11ImGuiWindow", ExactSpelling = true)]
        public static extern void SetActiveID(uint id, ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10SetFocusIDEjP11ImGuiWindow", ExactSpelling = true)]
        public static extern void SetFocusID(uint id, ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13ClearActiveIDEv", ExactSpelling = true)]
        public static extern void ClearActiveID();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12GetHoveredIDEv", ExactSpelling = true)]
        public static extern uint GetHoveredID();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12SetHoveredIDEj", ExactSpelling = true)]
        public static extern void SetHoveredID(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11KeepAliveIDEj", ExactSpelling = true)]
        public static extern void KeepAliveID(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14MarkItemEditedEj", ExactSpelling = true)]
        public static extern void MarkItemEdited(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14PushOverrideIDEj", ExactSpelling = true)]
        public static extern void PushOverrideID(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13GetIDWithSeedEPKcS1_j", ExactSpelling = true)]
        public static extern uint GetIDWithSeed(byte* str_id_begin, byte* str_id_end, uint seed);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8ItemSizeERK6ImVec2f", ExactSpelling = true)]
        public static extern void ItemSize(ImVec2* size, float text_baseline_y = -1f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8ItemSizeERK6ImRectf", ExactSpelling = true)]
        public static extern void ItemSize(ImRect* bb, float text_baseline_y = -1f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui7ItemAddERK6ImRectjPS1_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ItemAdd(ImRect* bb, uint id, ImRect* nav_bb = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13ItemHoverableERK6ImRectj", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ItemHoverable(ImRect* bb, uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11IsClippedExERK6ImRectjb", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsClippedEx(ImRect* bb, uint id, [MarshalAs(UnmanagedType.I1)] bool clip_even_when_logged);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15SetLastItemDataEP11ImGuiWindowjiRK6ImRect", ExactSpelling = true)]
        public static extern void SetLastItemData(ImGuiWindow* window, uint item_id, ImGuiItemStatusFlags status_flags, ImRect* item_rect);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21FocusableItemRegisterEP11ImGuiWindowj", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool FocusableItemRegister(ImGuiWindow* window, uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23FocusableItemUnregisterEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void FocusableItemUnregister(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12CalcItemSizeE6ImVec2ff", ExactSpelling = true)]
        public static extern ImVec2 CalcItemSize(ImVec2 size, float default_w, float default_h);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19CalcWrapWidthForPosERK6ImVec2f", ExactSpelling = true)]
        public static extern float CalcWrapWidthForPos(ImVec2* pos, float wrap_pos_x);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20PushMultiItemsWidthsEif", ExactSpelling = true)]
        public static extern void PushMultiItemsWidths(int components, float width_full);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12PushItemFlagEib", ExactSpelling = true)]
        public static extern void PushItemFlag(ImGuiItemFlags option, [MarshalAs(UnmanagedType.I1)] bool enabled);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11PopItemFlagEv", ExactSpelling = true)]
        public static extern void PopItemFlag();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22IsItemToggledSelectionEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsItemToggledSelection();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22GetContentRegionMaxAbsEv", ExactSpelling = true)]
        public static extern ImVec2 GetContentRegionMaxAbs();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12ShrinkWidthsEP20ImGuiShrinkWidthItemif", ExactSpelling = true)]
        public static extern void ShrinkWidths(ImGuiShrinkWidthItem* items, int count, float width_excess);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8LogBeginE12ImGuiLogTypei", ExactSpelling = true)]
        public static extern void LogBegin(ImGuiLogType type, int auto_open_depth);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11LogToBufferEi", ExactSpelling = true)]
        public static extern void LogToBuffer(int auto_open_depth = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15LogRenderedTextEPK6ImVec2PKcS4_", ExactSpelling = true)]
        public static extern void LogRenderedText(ImVec2* ref_pos, byte* text, byte* text_end = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui24LogSetNextTextDecorationEPKcS1_", ExactSpelling = true)]
        public static extern void LogSetNextTextDecoration(byte* prefix, byte* suffix);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12BeginChildExEPKcjRK6ImVec2bi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginChildEx(byte* name, uint id, ImVec2* size_arg, [MarshalAs(UnmanagedType.I1)] bool border, ImGuiWindowFlags flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11OpenPopupExEji", ExactSpelling = true)]
        public static extern void OpenPopupEx(uint id, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17ClosePopupToLevelEib", ExactSpelling = true)]
        public static extern void ClosePopupToLevel(int remaining, [MarshalAs(UnmanagedType.I1)] bool restore_focus_to_window_under_popup);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21ClosePopupsOverWindowEP11ImGuiWindowb", ExactSpelling = true)]
        public static extern void ClosePopupsOverWindow(ImGuiWindow* ref_window, [MarshalAs(UnmanagedType.I1)] bool restore_focus_to_window_under_popup);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11IsPopupOpenEji", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsPopupOpen(uint id, ImGuiPopupFlags popup_flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12BeginPopupExEji", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginPopupEx(uint id, ImGuiWindowFlags extra_flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14BeginTooltipExEii", ExactSpelling = true)]
        public static extern void BeginTooltipEx(ImGuiWindowFlags extra_flags, ImGuiTooltipFlags tooltip_flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20GetTopMostPopupModalEv", ExactSpelling = true)]
        public static extern ImGuiWindow* GetTopMostPopupModal();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25FindBestWindowPosForPopupEP11ImGuiWindow", ExactSpelling = true)]
        public static extern ImVec2 FindBestWindowPosForPopup(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui27FindBestWindowPosForPopupExERK6ImVec2S2_PiRK6ImRectS6_24ImGuiPopupPositionPolicy", ExactSpelling = true)]
        public static extern ImVec2 FindBestWindowPosForPopupEx(ImVec2* ref_pos, ImVec2* size, ImGuiDir* last_dir, ImRect* r_outer, ImRect* r_avoid, ImGuiPopupPositionPolicy policy);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13NavInitWindowEP11ImGuiWindowb", ExactSpelling = true)]
        public static extern void NavInitWindow(ImGuiWindow* window, [MarshalAs(UnmanagedType.I1)] bool force_reinit);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui28NavMoveRequestButNoResultYetEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool NavMoveRequestButNoResultYet();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20NavMoveRequestCancelEv", ExactSpelling = true)]
        public static extern void NavMoveRequestCancel();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21NavMoveRequestForwardEiiRK6ImRecti", ExactSpelling = true)]
        public static extern void NavMoveRequestForward(ImGuiDir move_dir, ImGuiDir clip_dir, ImRect* bb_rel, ImGuiNavMoveFlags move_flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25NavMoveRequestTryWrappingEP11ImGuiWindowi", ExactSpelling = true)]
        public static extern void NavMoveRequestTryWrapping(ImGuiWindow* window, ImGuiNavMoveFlags move_flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetNavInputAmountEi18ImGuiInputReadMode", ExactSpelling = true)]
        public static extern float GetNavInputAmount(ImGuiNavInput n, ImGuiInputReadMode mode);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19GetNavInputAmount2dEi18ImGuiInputReadModeff", ExactSpelling = true)]
        public static extern ImVec2 GetNavInputAmount2d(ImGuiNavDirSourceFlags dir_sources, ImGuiInputReadMode mode, float slow_factor = 0f, float fast_factor = 0f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25CalcTypematicRepeatAmountEffff", ExactSpelling = true)]
        public static extern int CalcTypematicRepeatAmount(float t0, float t1, float repeat_delay, float repeat_rate);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12ActivateItemEj", ExactSpelling = true)]
        public static extern void ActivateItem(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8SetNavIDEjij", ExactSpelling = true)]
        public static extern void SetNavID(uint id, int nav_layer, uint focus_scope_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19SetNavIDWithRectRelEjijRK6ImRect", ExactSpelling = true)]
        public static extern void SetNavIDWithRectRel(uint id, int nav_layer, uint focus_scope_id, ImRect* rect_rel);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14PushFocusScopeEj", ExactSpelling = true)]
        public static extern void PushFocusScope(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13PopFocusScopeEv", ExactSpelling = true)]
        public static extern void PopFocusScope();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20GetFocusedFocusScopeEv", ExactSpelling = true)]
        public static extern uint GetFocusedFocusScope();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13GetFocusScopeEv", ExactSpelling = true)]
        public static extern uint GetFocusScope();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22SetItemUsingMouseWheelEv", ExactSpelling = true)]
        public static extern void SetItemUsingMouseWheel();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21IsActiveIdUsingNavDirEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsActiveIdUsingNavDir(ImGuiDir dir);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23IsActiveIdUsingNavInputEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsActiveIdUsingNavInput(ImGuiNavInput input);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18IsActiveIdUsingKeyEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsActiveIdUsingKey(ImGuiKey key);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui24IsMouseDragPastThresholdEif", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsMouseDragPastThreshold(ImGuiMouseButton button, float lock_threshold = -1f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15IsKeyPressedMapEib", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsKeyPressedMap(ImGuiKey key, [MarshalAs(UnmanagedType.I1)] bool repeat = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14IsNavInputDownEi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsNavInputDown(ImGuiNavInput n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14IsNavInputTestEi18ImGuiInputReadMode", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsNavInputTest(ImGuiNavInput n, ImGuiInputReadMode rm);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20GetMergedKeyModFlagsEv", ExactSpelling = true)]
        public static extern ImGuiKeyModFlags GetMergedKeyModFlags();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21DockContextInitializeEP12ImGuiContext", ExactSpelling = true)]
        public static extern void DockContextInitialize(ImGuiContext* ctx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19DockContextShutdownEP12ImGuiContext", ExactSpelling = true)]
        public static extern void DockContextShutdown(ImGuiContext* ctx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21DockContextClearNodesEP12ImGuiContextjb", ExactSpelling = true)]
        public static extern void DockContextClearNodes(ImGuiContext* ctx, uint root_id, [MarshalAs(UnmanagedType.I1)] bool clear_settings_refs);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23DockContextRebuildNodesEP12ImGuiContext", ExactSpelling = true)]
        public static extern void DockContextRebuildNodes(ImGuiContext* ctx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui34DockContextNewFrameUpdateUndockingEP12ImGuiContext", ExactSpelling = true)]
        public static extern void DockContextNewFrameUpdateUndocking(ImGuiContext* ctx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui32DockContextNewFrameUpdateDockingEP12ImGuiContext", ExactSpelling = true)]
        public static extern void DockContextNewFrameUpdateDocking(ImGuiContext* ctx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20DockContextGenNodeIDEP12ImGuiContext", ExactSpelling = true)]
        public static extern uint DockContextGenNodeID(ImGuiContext* ctx);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20DockContextQueueDockEP12ImGuiContextP11ImGuiWindowP13ImGuiDockNodeS3_ifb", ExactSpelling = true)]
        public static extern void DockContextQueueDock(ImGuiContext* ctx, ImGuiWindow* target, ImGuiDockNode* target_node, ImGuiWindow* payload, ImGuiDir split_dir, float split_ratio, [MarshalAs(UnmanagedType.I1)] bool split_outer);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui28DockContextQueueUndockWindowEP12ImGuiContextP11ImGuiWindow", ExactSpelling = true)]
        public static extern void DockContextQueueUndockWindow(ImGuiContext* ctx, ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui26DockContextQueueUndockNodeEP12ImGuiContextP13ImGuiDockNode", ExactSpelling = true)]
        public static extern void DockContextQueueUndockNode(ImGuiContext* ctx, ImGuiDockNode* node);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui32DockContextCalcDropPosForDockingEP11ImGuiWindowP13ImGuiDockNodeS1_ibP6ImVec2", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DockContextCalcDropPosForDocking(ImGuiWindow* target, ImGuiDockNode* target_node, ImGuiWindow* payload, ImGuiDir split_dir, [MarshalAs(UnmanagedType.I1)] bool split_outer, ImVec2* out_pos);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui24DockNodeBeginAmendTabBarEP13ImGuiDockNode", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DockNodeBeginAmendTabBar(ImGuiDockNode* node);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22DockNodeEndAmendTabBarEv", ExactSpelling = true)]
        public static extern void DockNodeEndAmendTabBar();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19DockNodeGetRootNodeEP13ImGuiDockNode", ExactSpelling = true)]
        public static extern ImGuiDockNode* DockNodeGetRootNode(ImGuiDockNode* node);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16DockNodeGetDepthEPK13ImGuiDockNode", ExactSpelling = true)]
        public static extern int DockNodeGetDepth(ImGuiDockNode* node);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetWindowDockNodeEv", ExactSpelling = true)]
        public static extern ImGuiDockNode* GetWindowDockNode();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui28GetWindowAlwaysWantOwnTabBarEP11ImGuiWindow", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool GetWindowAlwaysWantOwnTabBar(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11BeginDockedEP11ImGuiWindowPb", ExactSpelling = true)]
        public static extern void BeginDocked(ImGuiWindow* window, bool* p_open);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui27BeginDockableDragDropSourceEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void BeginDockableDragDropSource(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui27BeginDockableDragDropTargetEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void BeginDockableDragDropTarget(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13SetWindowDockEP11ImGuiWindowji", ExactSpelling = true)]
        public static extern void SetWindowDock(ImGuiWindow* window, uint dock_id, ImGuiCond cond);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21DockBuilderDockWindowEPKcj", ExactSpelling = true)]
        public static extern void DockBuilderDockWindow(byte* window_name, uint node_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18DockBuilderGetNodeEj", ExactSpelling = true)]
        public static extern ImGuiDockNode* DockBuilderGetNode(uint node_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25DockBuilderGetCentralNodeEj", ExactSpelling = true)]
        public static extern ImGuiDockNode* DockBuilderGetCentralNode(uint node_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18DockBuilderAddNodeEji", ExactSpelling = true)]
        public static extern uint DockBuilderAddNode(uint node_id = 0, ImGuiDockNodeFlags flags = ImGuiDockNodeFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21DockBuilderRemoveNodeEj", ExactSpelling = true)]
        public static extern void DockBuilderRemoveNode(uint node_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui34DockBuilderRemoveNodeDockedWindowsEjb", ExactSpelling = true)]
        public static extern void DockBuilderRemoveNodeDockedWindows(uint node_id, [MarshalAs(UnmanagedType.I1)] bool clear_settings_refs = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui31DockBuilderRemoveNodeChildNodesEj", ExactSpelling = true)]
        public static extern void DockBuilderRemoveNodeChildNodes(uint node_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21DockBuilderSetNodePosEj6ImVec2", ExactSpelling = true)]
        public static extern void DockBuilderSetNodePos(uint node_id, ImVec2 pos);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22DockBuilderSetNodeSizeEj6ImVec2", ExactSpelling = true)]
        public static extern void DockBuilderSetNodeSize(uint node_id, ImVec2 size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20DockBuilderSplitNodeEjifPjS0_", ExactSpelling = true)]
        public static extern uint DockBuilderSplitNode(uint node_id, ImGuiDir split_dir, float size_ratio_for_node_at_dir, uint* out_id_at_dir, uint* out_id_at_opposite_dir);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui24DockBuilderCopyDockSpaceEjjP8ImVectorIPKcE", ExactSpelling = true)]
        public static extern void DockBuilderCopyDockSpace(uint src_dockspace_id, uint dst_dockspace_id, ImVector<Pointer<byte>>* in_window_remap_pairs);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19DockBuilderCopyNodeEjjP8ImVectorIjE", ExactSpelling = true)]
        public static extern void DockBuilderCopyNode(uint src_node_id, uint dst_node_id, ImVector<uint>* out_node_remap_pairs);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui29DockBuilderCopyWindowSettingsEPKcS1_", ExactSpelling = true)]
        public static extern void DockBuilderCopyWindowSettings(byte* src_name, byte* dst_name);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17DockBuilderFinishEj", ExactSpelling = true)]
        public static extern void DockBuilderFinish(uint node_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25BeginDragDropTargetCustomERK6ImRectj", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginDragDropTargetCustom(ImRect* bb, uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13ClearDragDropEv", ExactSpelling = true)]
        public static extern void ClearDragDrop();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui30IsDragDropPayloadBeingAcceptedEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool IsDragDropPayloadBeingAccepted();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui33SetWindowClipRectBeforeSetChannelEP11ImGuiWindowRK6ImRect", ExactSpelling = true)]
        public static extern void SetWindowClipRectBeforeSetChannel(ImGuiWindow* window, ImRect* clip_rect);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12BeginColumnsEPKcii", ExactSpelling = true)]
        public static extern void BeginColumns(byte* str_id, int count, ImGuiOldColumnFlags flags = ImGuiOldColumnFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10EndColumnsEv", ExactSpelling = true)]
        public static extern void EndColumns();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18PushColumnClipRectEi", ExactSpelling = true)]
        public static extern void PushColumnClipRect(int column_index);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21PushColumnsBackgroundEv", ExactSpelling = true)]
        public static extern void PushColumnsBackground();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20PopColumnsBackgroundEv", ExactSpelling = true)]
        public static extern void PopColumnsBackground();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12GetColumnsIDEPKci", ExactSpelling = true)]
        public static extern uint GetColumnsID(byte* str_id, int count);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19FindOrCreateColumnsEP11ImGuiWindowj", ExactSpelling = true)]
        public static extern ImGuiOldColumns* FindOrCreateColumns(ImGuiWindow* window, uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23GetColumnOffsetFromNormEPK15ImGuiOldColumnsf", ExactSpelling = true)]
        public static extern float GetColumnOffsetFromNorm(ImGuiOldColumns* columns, float offset_norm);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23GetColumnNormFromOffsetEPK15ImGuiOldColumnsf", ExactSpelling = true)]
        public static extern float GetColumnNormFromOffset(ImGuiOldColumns* columns, float offset);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20TableOpenContextMenuEi", ExactSpelling = true)]
        public static extern void TableOpenContextMenu(int column_n = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21TableSetColumnEnabledEib", ExactSpelling = true)]
        public static extern void TableSetColumnEnabled(int column_n, [MarshalAs(UnmanagedType.I1)] bool enabled);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19TableSetColumnWidthEif", ExactSpelling = true)]
        public static extern void TableSetColumnWidth(int column_n, float width);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui27TableSetColumnSortDirectionEiib", ExactSpelling = true)]
        public static extern void TableSetColumnSortDirection(int column_n, ImGuiSortDirection sort_direction, [MarshalAs(UnmanagedType.I1)] bool append_to_sort_specs);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21TableGetHoveredColumnEv", ExactSpelling = true)]
        public static extern int TableGetHoveredColumn();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23TableGetHeaderRowHeightEv", ExactSpelling = true)]
        public static extern float TableGetHeaderRowHeight();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui26TablePushBackgroundChannelEv", ExactSpelling = true)]
        public static extern void TablePushBackgroundChannel();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25TablePopBackgroundChannelEv", ExactSpelling = true)]
        public static extern void TablePopBackgroundChannel();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15GetCurrentTableEv", ExactSpelling = true)]
        public static extern ImGuiTable* GetCurrentTable();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13TableFindByIDEj", ExactSpelling = true)]
        public static extern ImGuiTable* TableFindByID(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12BeginTableExEPKcjiiRK6ImVec2f", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginTableEx(byte* name, uint id, int columns_count, ImGuiTableFlags flags, ImVec2* outer_size, float inner_width = 0f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20TableBeginInitMemoryEP10ImGuiTablei", ExactSpelling = true)]
        public static extern void TableBeginInitMemory(ImGuiTable* table, int columns_count);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23TableBeginApplyRequestsEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableBeginApplyRequests(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22TableSetupDrawChannelsEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableSetupDrawChannels(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17TableUpdateLayoutEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableUpdateLayout(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18TableUpdateBordersEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableUpdateBorders(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui33TableUpdateColumnsWeightFromWidthEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableUpdateColumnsWeightFromWidth(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16TableDrawBordersEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableDrawBorders(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20TableDrawContextMenuEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableDrawContextMenu(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22TableMergeDrawChannelsEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableMergeDrawChannels(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22TableSortSpecsSanitizeEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableSortSpecsSanitize(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19TableSortSpecsBuildEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableSortSpecsBuild(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui31TableGetColumnNextSortDirectionEP16ImGuiTableColumn", ExactSpelling = true)]
        public static extern ImGuiSortDirection TableGetColumnNextSortDirection(ImGuiTableColumn* column);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui27TableFixColumnSortDirectionEP10ImGuiTableP16ImGuiTableColumn", ExactSpelling = true)]
        public static extern void TableFixColumnSortDirection(ImGuiTable* table, ImGuiTableColumn* column);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23TableGetColumnWidthAutoEP10ImGuiTableP16ImGuiTableColumn", ExactSpelling = true)]
        public static extern float TableGetColumnWidthAuto(ImGuiTable* table, ImGuiTableColumn* column);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13TableBeginRowEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableBeginRow(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11TableEndRowEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableEndRow(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14TableBeginCellEP10ImGuiTablei", ExactSpelling = true)]
        public static extern void TableBeginCell(ImGuiTable* table, int column_n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12TableEndCellEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableEndCell(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18TableGetCellBgRectEPK10ImGuiTablei", ExactSpelling = true)]
        public static extern ImRect TableGetCellBgRect(ImGuiTable* table, int column_n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18TableGetColumnNameEPK10ImGuiTablei", ExactSpelling = true)]
        public static extern byte* TableGetColumnName(ImGuiTable* table, int column_n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22TableGetColumnResizeIDEPK10ImGuiTableii", ExactSpelling = true)]
        public static extern uint TableGetColumnResizeID(ImGuiTable* table, int column_n, int instance_no = 0);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22TableGetMaxColumnWidthEPK10ImGuiTablei", ExactSpelling = true)]
        public static extern float TableGetMaxColumnWidth(ImGuiTable* table, int column_n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui29TableSetColumnWidthAutoSingleEP10ImGuiTablei", ExactSpelling = true)]
        public static extern void TableSetColumnWidthAutoSingle(ImGuiTable* table, int column_n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui26TableSetColumnWidthAutoAllEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableSetColumnWidthAutoAll(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11TableRemoveEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableRemove(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui30TableGcCompactTransientBuffersEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableGcCompactTransientBuffers(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22TableGcCompactSettingsEv", ExactSpelling = true)]
        public static extern void TableGcCompactSettings();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17TableLoadSettingsEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableLoadSettings(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17TableSaveSettingsEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableSaveSettings(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18TableResetSettingsEP10ImGuiTable", ExactSpelling = true)]
        public static extern void TableResetSettings(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21TableGetBoundSettingsEP10ImGuiTable", ExactSpelling = true)]
        public static extern ImGuiTableSettings* TableGetBoundSettings(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui27TableSettingsInstallHandlerEP12ImGuiContext", ExactSpelling = true)]
        public static extern void TableSettingsInstallHandler(ImGuiContext* context);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19TableSettingsCreateEji", ExactSpelling = true)]
        public static extern ImGuiTableSettings* TableSettingsCreate(uint id, int columns_count);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21TableSettingsFindByIDEj", ExactSpelling = true)]
        public static extern ImGuiTableSettings* TableSettingsFindByID(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13BeginTabBarExEP11ImGuiTabBarRK6ImRectiP13ImGuiDockNode", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool BeginTabBarEx(ImGuiTabBar* tab_bar, ImRect* bb, ImGuiTabBarFlags flags, ImGuiDockNode* dock_node);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17TabBarFindTabByIDEP11ImGuiTabBarj", ExactSpelling = true)]
        public static extern ImGuiTabItem* TabBarFindTabByID(ImGuiTabBar* tab_bar, uint tab_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui48TabBarFindMostRecentlySelectedTabForActiveWindowEP11ImGuiTabBar", ExactSpelling = true)]
        public static extern ImGuiTabItem* TabBarFindMostRecentlySelectedTabForActiveWindow(ImGuiTabBar* tab_bar);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12TabBarAddTabEP11ImGuiTabBariP11ImGuiWindow", ExactSpelling = true)]
        public static extern void TabBarAddTab(ImGuiTabBar* tab_bar, ImGuiTabItemFlags tab_flags, ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15TabBarRemoveTabEP11ImGuiTabBarj", ExactSpelling = true)]
        public static extern void TabBarRemoveTab(ImGuiTabBar* tab_bar, uint tab_id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14TabBarCloseTabEP11ImGuiTabBarP12ImGuiTabItem", ExactSpelling = true)]
        public static extern void TabBarCloseTab(ImGuiTabBar* tab_bar, ImGuiTabItem* tab);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18TabBarQueueReorderEP11ImGuiTabBarPK12ImGuiTabItemi", ExactSpelling = true)]
        public static extern void TabBarQueueReorder(ImGuiTabBar* tab_bar, ImGuiTabItem* tab, int dir);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20TabBarProcessReorderEP11ImGuiTabBar", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TabBarProcessReorder(ImGuiTabBar* tab_bar);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9TabItemExEP11ImGuiTabBarPKcPbiP11ImGuiWindow", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TabItemEx(ImGuiTabBar* tab_bar, byte* label, bool* p_open, ImGuiTabItemFlags flags, ImGuiWindow* docked_window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15TabItemCalcSizeEPKcb", ExactSpelling = true)]
        public static extern ImVec2 TabItemCalcSize(byte* label, [MarshalAs(UnmanagedType.I1)] bool has_close_button);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17TabItemBackgroundEP10ImDrawListRK6ImRectij", ExactSpelling = true)]
        public static extern void TabItemBackground(ImDrawList* draw_list, ImRect* bb, ImGuiTabItemFlags flags, uint col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui26TabItemLabelAndCloseButtonEP10ImDrawListRK6ImRecti6ImVec2PKcjjbPbS8_", ExactSpelling = true)]
        public static extern void TabItemLabelAndCloseButton(ImDrawList* draw_list, ImRect* bb, ImGuiTabItemFlags flags, ImVec2 frame_padding, byte* label, uint tab_id, uint close_button_id, [MarshalAs(UnmanagedType.I1)] bool is_contents_visible, bool* out_just_closed, bool* out_text_clipped);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui10RenderTextE6ImVec2PKcS2_b", ExactSpelling = true)]
        public static extern void RenderText(ImVec2 pos, byte* text, byte* text_end = null, [MarshalAs(UnmanagedType.I1)] bool hide_text_after_hash = true);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17RenderTextWrappedE6ImVec2PKcS2_f", ExactSpelling = true)]
        public static extern void RenderTextWrapped(ImVec2 pos, byte* text, byte* text_end, float wrap_width);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_S2_PK6ImRect", ExactSpelling = true)]
        public static extern void RenderTextClipped(ImVec2* pos_min, ImVec2* pos_max, byte* text, byte* text_end, ImVec2* text_size_if_known, ImVec2* align, ImRect* clip_rect = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19RenderTextClippedExEP10ImDrawListRK6ImVec2S4_PKcS6_PS3_S4_PK6ImRect", ExactSpelling = true)]
        public static extern void RenderTextClippedEx(ImDrawList* draw_list, ImVec2* pos_min, ImVec2* pos_max, byte* text, byte* text_end, ImVec2* text_size_if_known, ImVec2* align, ImRect* clip_rect = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18RenderTextEllipsisEP10ImDrawListRK6ImVec2S4_ffPKcS6_PS3_", ExactSpelling = true)]
        public static extern void RenderTextEllipsis(ImDrawList* draw_list, ImVec2* pos_min, ImVec2* pos_max, float clip_max_x, float ellipsis_max_x, byte* text, byte* text_end, ImVec2* text_size_if_known);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11RenderFrameE6ImVec2S0_jbf", ExactSpelling = true)]
        public static extern void RenderFrame(ImVec2 p_min, ImVec2 p_max, uint fill_col, [MarshalAs(UnmanagedType.I1)] bool border = true, float rounding = 0f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17RenderFrameBorderE6ImVec2S0_f", ExactSpelling = true)]
        public static extern void RenderFrameBorder(ImVec2 p_min, ImVec2 p_max, float rounding = 0f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui36RenderColorRectWithAlphaCheckerboardEP10ImDrawList6ImVec2S2_jfS2_fi", ExactSpelling = true)]
        public static extern void RenderColorRectWithAlphaCheckerboard(ImDrawList* draw_list, ImVec2 p_min, ImVec2 p_max, uint fill_col, float grid_step, ImVec2 grid_off, float rounding = 0f, int rounding_corners_flags = -1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18RenderNavHighlightERK6ImRectji", ExactSpelling = true)]
        public static extern void RenderNavHighlight(ImRect* bb, uint id, ImGuiNavHighlightFlags flags = ImGuiNavHighlightFlags.TypeDefault);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19FindRenderedTextEndEPKcS1_", ExactSpelling = true)]
        public static extern byte* FindRenderedTextEnd(byte* text, byte* text_end = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11RenderArrowEP10ImDrawList6ImVec2jif", ExactSpelling = true)]
        public static extern void RenderArrow(ImDrawList* draw_list, ImVec2 pos, uint col, ImGuiDir dir, float scale = 1f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12RenderBulletEP10ImDrawList6ImVec2j", ExactSpelling = true)]
        public static extern void RenderBullet(ImDrawList* draw_list, ImVec2 pos, uint col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15RenderCheckMarkEP10ImDrawList6ImVec2jf", ExactSpelling = true)]
        public static extern void RenderCheckMark(ImDrawList* draw_list, ImVec2 pos, uint col, float sz);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17RenderMouseCursorEP10ImDrawList6ImVec2fijjj", ExactSpelling = true)]
        public static extern void RenderMouseCursor(ImDrawList* draw_list, ImVec2 pos, float scale, ImGuiMouseCursor mouse_cursor, uint col_fill, uint col_border, uint col_shadow);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21RenderArrowPointingAtEP10ImDrawList6ImVec2S2_ij", ExactSpelling = true)]
        public static extern void RenderArrowPointingAt(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, ImGuiDir direction, uint col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui19RenderArrowDockMenuEP10ImDrawList6ImVec2fj", ExactSpelling = true)]
        public static extern void RenderArrowDockMenu(ImDrawList* draw_list, ImVec2 p_min, float sz, uint col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22RenderRectFilledRangeHEP10ImDrawListRK6ImRectjfff", ExactSpelling = true)]
        public static extern void RenderRectFilledRangeH(ImDrawList* draw_list, ImRect* rect, uint col, float x_start_norm, float x_end_norm, float rounding);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui24RenderRectFilledWithHoleEP10ImDrawList6ImRectS2_jf", ExactSpelling = true)]
        public static extern void RenderRectFilledWithHole(ImDrawList* draw_list, ImRect outer, ImRect inner, uint col, float rounding);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui6TextExEPKcS1_i", ExactSpelling = true)]
        public static extern void TextEx(byte* text, byte* text_end = null, ImGuiTextFlags flags = ImGuiTextFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui8ButtonExEPKcRK6ImVec2i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ButtonEx(byte* label, ImVec2* size_arg, ImGuiButtonFlags flags = ImGuiButtonFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11CloseButtonEjRK6ImVec2", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool CloseButton(uint id, ImVec2* pos);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14CollapseButtonEjRK6ImVec2P13ImGuiDockNode", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool CollapseButton(uint id, ImVec2* pos, ImGuiDockNode* dock_node);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13ArrowButtonExEPKci6ImVec2i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ArrowButtonEx(byte* str_id, ImGuiDir dir, ImVec2 size_arg, ImGuiButtonFlags flags = ImGuiButtonFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui9ScrollbarE9ImGuiAxis", ExactSpelling = true)]
        public static extern void Scrollbar(ImGuiAxis axis);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11ScrollbarExERK6ImRectj9ImGuiAxisPfffi", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ScrollbarEx(ImRect* bb, uint id, ImGuiAxis axis, float* p_scroll_v, float avail_v, float contents_v, ImDrawCornerFlags rounding_corners);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13ImageButtonExEjPvRK6ImVec2S3_S3_S3_RK6ImVec4S6_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ImageButtonEx(uint id, void* texture_id, ImVec2* size, ImVec2* uv0, ImVec2* uv1, ImVec2* padding, ImVec4* bg_col, ImVec4* tint_col);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22GetWindowScrollbarRectEP11ImGuiWindow9ImGuiAxis", ExactSpelling = true)]
        public static extern ImRect GetWindowScrollbarRect(ImGuiWindow* window, ImGuiAxis axis);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20GetWindowScrollbarIDEP11ImGuiWindow9ImGuiAxis", ExactSpelling = true)]
        public static extern uint GetWindowScrollbarID(ImGuiWindow* window, ImGuiAxis axis);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetWindowResizeIDEP11ImGuiWindowi", ExactSpelling = true)]
        public static extern uint GetWindowResizeID(ImGuiWindow* window, int n);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11SeparatorExEi", ExactSpelling = true)]
        public static extern void SeparatorEx(ImGuiSeparatorFlags flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13CheckboxFlagsEPKcPxx", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool CheckboxFlags(byte* label, long* flags, long flags_value);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13CheckboxFlagsEPKcPyy", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool CheckboxFlags(byte* label, ulong* flags, ulong flags_value);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14ButtonBehaviorERK6ImRectjPbS3_i", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool ButtonBehavior(ImRect* bb, uint id, bool* out_hovered, bool* out_held, ImGuiButtonFlags flags = ImGuiButtonFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12DragBehaviorEjiPvfPKvS2_PKci", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DragBehavior(uint id, ImGuiDataType data_type, void* p_v, float v_speed, void* p_min, void* p_max, byte* format, ImGuiSliderFlags flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14SliderBehaviorERK6ImRectjiPvPKvS5_PKciPS0_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SliderBehavior(ImRect* bb, uint id, ImGuiDataType data_type, void* p_v, void* p_min, void* p_max, byte* format, ImGuiSliderFlags flags, ImRect* out_grab_bb);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16SplitterBehaviorERK6ImRectj9ImGuiAxisPfS4_ffff", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool SplitterBehavior(ImRect* bb, uint id, ImGuiAxis axis, float* size1, float* size2, float min_size1, float min_size2, float hover_extend = 0f, float hover_visibility_delay = 0f);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16TreeNodeBehaviorEjiPKcS1_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNodeBehavior(uint id, ImGuiTreeNodeFlags flags, byte* label, byte* label_end = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22TreeNodeBehaviorIsOpenEji", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TreeNodeBehaviorIsOpen(uint id, ImGuiTreeNodeFlags flags = ImGuiTreeNodeFlags.None);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18TreePushOverrideIDEj", ExactSpelling = true)]
        public static extern void TreePushOverrideID(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15DataTypeGetInfoEi", ExactSpelling = true)]
        public static extern ImGuiDataTypeInfo* DataTypeGetInfo(ImGuiDataType data_type);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20DataTypeFormatStringEPciiPKvPKc", ExactSpelling = true)]
        public static extern int DataTypeFormatString(byte* buf, int buf_size, ImGuiDataType data_type, void* p_data, byte* format);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15DataTypeApplyOpEiiPvPKvS2_", ExactSpelling = true)]
        public static extern void DataTypeApplyOp(ImGuiDataType data_type, int op, void* output, void* arg_1, void* arg_2);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23DataTypeApplyOpFromTextEPKcS1_iPvS1_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DataTypeApplyOpFromText(byte* buf, byte* initial_value_buf, ImGuiDataType data_type, void* p_data, byte* format);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15DataTypeCompareEiPKvS1_", ExactSpelling = true)]
        public static extern int DataTypeCompare(ImGuiDataType data_type, void* arg_1, void* arg_2);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13DataTypeClampEiPvPKvS2_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool DataTypeClamp(ImGuiDataType data_type, void* p_data, void* p_min, void* p_max);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui11InputTextExEPKcS1_PciRK6ImVec2iPFiP26ImGuiInputTextCallbackDataEPv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool InputTextEx(byte* label, byte* hint, byte* buf, int buf_size, ImVec2* size_arg, ImGuiInputTextFlags flags, delegate* unmanaged[Cdecl]<ImGuiInputTextCallbackData*, int> callback = null, void* user_data = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui13TempInputTextERK6ImRectjPKcPcii", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TempInputText(ImRect* bb, uint id, byte* label, byte* buf, int buf_size, ImGuiInputTextFlags flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15TempInputScalarERK6ImRectjPKciPvS4_PKvS7_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TempInputScalar(ImRect* bb, uint id, byte* label, ImGuiDataType data_type, void* p_data, byte* format, void* p_clamp_min = null, void* p_clamp_max = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17TempInputIsActiveEj", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool TempInputIsActive(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17GetInputTextStateEj", ExactSpelling = true)]
        public static extern ImGuiInputTextState* GetInputTextState(uint id);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui12ColorTooltipEPKcPKfi", ExactSpelling = true)]
        public static extern void ColorTooltip(byte* text, float* col, ImGuiColorEditFlags flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui21ColorEditOptionsPopupEPKfi", ExactSpelling = true)]
        public static extern void ColorEditOptionsPopup(float* col, ImGuiColorEditFlags flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23ColorPickerOptionsPopupEPKfi", ExactSpelling = true)]
        public static extern void ColorPickerOptionsPopup(float* ref_col, ImGuiColorEditFlags flags);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui6PlotExE13ImGuiPlotTypePKcPFfPviES3_iiS2_ff6ImVec2", ExactSpelling = true)]
        public static extern int PlotEx(ImGuiPlotType plot_type, byte* label, delegate* unmanaged[Cdecl]<void*, int, float> values_getter, void* data, int values_count, int values_offset, byte* overlay_text, float scale_min, float scale_max, ImVec2 frame_size);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui38ShadeVertsLinearColorGradientKeepAlphaEP10ImDrawListii6ImVec2S2_jj", ExactSpelling = true)]
        public static extern void ShadeVertsLinearColorGradientKeepAlpha(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, ImVec2 gradient_p0, ImVec2 gradient_p1, uint col0, uint col1);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui18ShadeVertsLinearUVEP10ImDrawListiiRK6ImVec2S4_S4_S4_b", ExactSpelling = true)]
        public static extern void ShadeVertsLinearUV(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, ImVec2* a, ImVec2* b, ImVec2* uv_a, ImVec2* uv_b, [MarshalAs(UnmanagedType.I1)] bool clamp);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui29GcCompactTransientMiscBuffersEv", ExactSpelling = true)]
        public static extern void GcCompactTransientMiscBuffers();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui31GcCompactTransientWindowBuffersEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void GcCompactTransientWindowBuffers(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui29GcAwakeTransientWindowBuffersEP11ImGuiWindow", ExactSpelling = true)]
        public static extern void GcAwakeTransientWindowBuffers(ImGuiWindow* window);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui25ErrorCheckEndFrameRecoverEPFvPvPKczES0_", ExactSpelling = true)]
        public static extern void ErrorCheckEndFrameRecover(delegate* unmanaged[Cdecl]<void*, byte*, void> log_callback, void* user_data = null);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17DebugDrawItemRectEj", ExactSpelling = true)]
        public static extern void DebugDrawItemRect(uint col = 4278190335);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20DebugStartItemPickerEv", ExactSpelling = true)]
        public static extern void DebugStartItemPicker();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16DebugNodeColumnsEP15ImGuiOldColumns", ExactSpelling = true)]
        public static extern void DebugNodeColumns(ImGuiOldColumns* columns);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17DebugNodeDockNodeEP13ImGuiDockNodePKc", ExactSpelling = true)]
        public static extern void DebugNodeDockNode(ImGuiDockNode* node, byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17DebugNodeDrawListEP11ImGuiWindowP14ImGuiViewportPPK10ImDrawListPKc", ExactSpelling = true)]
        public static extern void DebugNodeDrawList(ImGuiWindow* window, ImGuiViewportP* viewport, ImDrawList* draw_list, byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui38DebugNodeDrawCmdShowMeshAndBoundingBoxEP10ImDrawListPKS0_PK9ImDrawCmdbb", ExactSpelling = true)]
        public static extern void DebugNodeDrawCmdShowMeshAndBoundingBox(ImDrawList* out_draw_list, ImDrawList* draw_list, ImDrawCmd* draw_cmd, [MarshalAs(UnmanagedType.I1)] bool show_mesh, [MarshalAs(UnmanagedType.I1)] bool show_aabb);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui16DebugNodeStorageEP12ImGuiStoragePKc", ExactSpelling = true)]
        public static extern void DebugNodeStorage(ImGuiStorage* storage, byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15DebugNodeTabBarEP11ImGuiTabBarPKc", ExactSpelling = true)]
        public static extern void DebugNodeTabBar(ImGuiTabBar* tab_bar, byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui14DebugNodeTableEP10ImGuiTable", ExactSpelling = true)]
        public static extern void DebugNodeTable(ImGuiTable* table);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui22DebugNodeTableSettingsEP18ImGuiTableSettings", ExactSpelling = true)]
        public static extern void DebugNodeTableSettings(ImGuiTableSettings* settings);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui15DebugNodeWindowEP11ImGuiWindowPKc", ExactSpelling = true)]
        public static extern void DebugNodeWindow(ImGuiWindow* window, byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui23DebugNodeWindowSettingsEP19ImGuiWindowSettings", ExactSpelling = true)]
        public static extern void DebugNodeWindowSettings(ImGuiWindowSettings* settings);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui20DebugNodeWindowsListEP8ImVectorIP11ImGuiWindowEPKc", ExactSpelling = true)]
        public static extern void DebugNodeWindowsList(ImVector<Pointer<ImGuiWindow>>* windows, byte* label);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui17DebugNodeViewportEP14ImGuiViewportP", ExactSpelling = true)]
        public static extern void DebugNodeViewport(ImGuiViewportP* viewport);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN5ImGui28DebugRenderViewportThumbnailEP10ImDrawListP14ImGuiViewportPRK6ImRect", ExactSpelling = true)]
        public static extern void DebugRenderViewportThumbnail(ImDrawList* draw_list, ImGuiViewportP* viewport, ImRect* bb);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z35ImFontAtlasGetBuilderForStbTruetypev", ExactSpelling = true)]
        public static extern ImFontBuilderIO* ImFontAtlasGetBuilderForStbTruetype();

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z20ImFontAtlasBuildInitP11ImFontAtlas", ExactSpelling = true)]
        public static extern void ImFontAtlasBuildInit(ImFontAtlas* atlas);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z25ImFontAtlasBuildSetupFontP11ImFontAtlasP6ImFontP12ImFontConfigff", ExactSpelling = true)]
        public static extern void ImFontAtlasBuildSetupFont(ImFontAtlas* atlas, ImFont* font, ImFontConfig* font_config, float ascent, float descent);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z31ImFontAtlasBuildPackCustomRectsP11ImFontAtlasPv", ExactSpelling = true)]
        public static extern void ImFontAtlasBuildPackCustomRects(ImFontAtlas* atlas, void* stbrp_context_opaque);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z22ImFontAtlasBuildFinishP11ImFontAtlas", ExactSpelling = true)]
        public static extern void ImFontAtlasBuildFinish(ImFontAtlas* atlas);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z40ImFontAtlasBuildRender8bppRectFromStringP11ImFontAtlasiiiiPKcch", ExactSpelling = true)]
        public static extern void ImFontAtlasBuildRender8bppRectFromString(ImFontAtlas* atlas, int x, int y, int w, int h, byte* in_str, byte in_marker_char, byte in_marker_pixel_value);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z41ImFontAtlasBuildRender32bppRectFromStringP11ImFontAtlasiiiiPKccj", ExactSpelling = true)]
        public static extern void ImFontAtlasBuildRender32bppRectFromString(ImFontAtlas* atlas, int x, int y, int w, int h, byte* in_str, byte in_marker_char, uint in_marker_pixel_value);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z39ImFontAtlasBuildMultiplyCalcLookupTablePhf", ExactSpelling = true)]
        public static extern void ImFontAtlasBuildMultiplyCalcLookupTable(ConstantArray_unsigned__UNICODE_0020__char_256* out_table, float in_multiply_factor);

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_Z34ImFontAtlasBuildMultiplyRectAlpha8PKhPhiiiii", ExactSpelling = true)]
        public static extern void ImFontAtlasBuildMultiplyRectAlpha8(ConstantArray_const__UNICODE_0020__unsigned__UNICODE_0020__char_256* table, byte* pixels, int x, int y, int w, int h, int stride);
    }
}
