// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace InfectedImGui.Internal
{
    [StructLayout(LayoutKind.Explicit, Size = 104)]
    public unsafe partial struct ImGuiTableColumn
    {
        [FieldOffset(0)] public ImGuiTableColumnFlags Flags;

        [FieldOffset(4)] public float WidthGiven;

        [FieldOffset(8)] public float MinX;

        [FieldOffset(12)] public float MaxX;

        [FieldOffset(16)] public float WidthRequest;

        [FieldOffset(20)] public float WidthAuto;

        [FieldOffset(24)] public float StretchWeight;

        [FieldOffset(28)] public float InitStretchWeightOrWidth;

        [FieldOffset(32)] public ImRect ClipRect;

        [FieldOffset(48)] public uint UserID;

        [FieldOffset(52)] public float WorkMinX;

        [FieldOffset(56)] public float WorkMaxX;

        [FieldOffset(60)] public float ItemWidth;

        [FieldOffset(64)] public float ContentMaxXFrozen;

        [FieldOffset(68)] public float ContentMaxXUnfrozen;

        [FieldOffset(72)] public float ContentMaxXHeadersUsed;

        [FieldOffset(76)] public float ContentMaxXHeadersIdeal;

        [FieldOffset(80)] public short NameOffset;

        [FieldOffset(82)] public sbyte DisplayOrder;

        [FieldOffset(83)] public sbyte IndexWithinEnabledSet;

        [FieldOffset(84)] public sbyte PrevEnabledColumn;

        [FieldOffset(85)] public sbyte NextEnabledColumn;

        [FieldOffset(86)] public sbyte SortOrder;

        [FieldOffset(87)] public byte DrawChannelCurrent;

        [FieldOffset(88)] public byte DrawChannelFrozen;

        [FieldOffset(89)] public byte DrawChannelUnfrozen;

        [FieldOffset(90)] [MarshalAs(UnmanagedType.I1)] public bool IsEnabled;

        [FieldOffset(91)] [MarshalAs(UnmanagedType.I1)] public bool IsEnabledNextFrame;

        [FieldOffset(92)] [MarshalAs(UnmanagedType.I1)] public bool IsVisibleX;

        [FieldOffset(93)] [MarshalAs(UnmanagedType.I1)] public bool IsVisibleY;

        [FieldOffset(94)] [MarshalAs(UnmanagedType.I1)] public bool IsRequestOutput;

        [FieldOffset(95)] [MarshalAs(UnmanagedType.I1)] public bool IsSkipItems;

        [FieldOffset(96)] [MarshalAs(UnmanagedType.I1)] public bool IsPreserveWidthAuto;

        [FieldOffset(97)] public sbyte NavLayerCurrent;

        [FieldOffset(98)] public byte AutoFitQueue;

        [FieldOffset(99)] public byte CannotSkipItemsQueue;

        [FieldOffset(100)] private byte __SortDirection__backingField;
        public byte SortDirection
        {
            get => (byte)((__SortDirection__backingField >> 0) & 0x3U);
            set
            {
                uint shiftedValue = (value & 0x3U) << 0;
                uint otherBits = __SortDirection__backingField & 0xFCU;
                __SortDirection__backingField = (byte)(otherBits | shiftedValue);
            }
        }

        [FieldOffset(100)] private byte __SortDirectionsAvailCount__backingField;
        public byte SortDirectionsAvailCount
        {
            get => (byte)((__SortDirectionsAvailCount__backingField >> 2) & 0x3U);
            set
            {
                uint shiftedValue = (value & 0x3U) << 2;
                uint otherBits = __SortDirectionsAvailCount__backingField & 0xF3U;
                __SortDirectionsAvailCount__backingField = (byte)(otherBits | shiftedValue);
            }
        }

        [FieldOffset(100)] private byte __SortDirectionsAvailMask__backingField;
        public byte SortDirectionsAvailMask
        {
            get => (byte)((__SortDirectionsAvailMask__backingField >> 4) & 0xFU);
            set
            {
                uint shiftedValue = (value & 0xFU) << 4;
                uint otherBits = __SortDirectionsAvailMask__backingField & 0xFU;
                __SortDirectionsAvailMask__backingField = (byte)(otherBits | shiftedValue);
            }
        }

        [FieldOffset(101)] public byte SortDirectionsAvailList;

        [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper65", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImGuiTableColumn* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public unsafe void Constructor()
        {
            fixed (ImGuiTableColumn* @this = &this)
            { Constructor_PInvoke(@this); }
        }
    }
}
