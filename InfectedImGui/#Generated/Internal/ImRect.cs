// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace InfectedImGui.Internal
{
    [StructLayout(LayoutKind.Explicit, Size = 16)]
    public unsafe partial struct ImRect
    {
        [FieldOffset(0)] public ImVec2 Min;

        [FieldOffset(8)] public ImVec2 Max;

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper37", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor()
        {
            fixed (ImRect* @this = &this)
            { Constructor_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper38", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImRect* @this, ImVec2* min, ImVec2* max);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(ImVec2* min, ImVec2* max)
        {
            fixed (ImRect* @this = &this)
            { Constructor_PInvoke(@this, min, max); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper39", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImRect* @this, ImVec4* v);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(ImVec4* v)
        {
            fixed (ImRect* @this = &this)
            { Constructor_PInvoke(@this, v); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper40", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImRect* @this, float x1, float y1, float x2, float y2);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(float x1, float y1, float x2, float y2)
        {
            fixed (ImRect* @this = &this)
            { Constructor_PInvoke(@this, x1, y1, x2, y2); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect9GetCenterEv", ExactSpelling = true)]
        private static extern ImVec2 GetCenter_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImVec2 GetCenter()
        {
            fixed (ImRect* @this = &this)
            { return GetCenter_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect7GetSizeEv", ExactSpelling = true)]
        private static extern ImVec2 GetSize_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImVec2 GetSize()
        {
            fixed (ImRect* @this = &this)
            { return GetSize_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect8GetWidthEv", ExactSpelling = true)]
        private static extern float GetWidth_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float GetWidth()
        {
            fixed (ImRect* @this = &this)
            { return GetWidth_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect9GetHeightEv", ExactSpelling = true)]
        private static extern float GetHeight_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float GetHeight()
        {
            fixed (ImRect* @this = &this)
            { return GetHeight_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect5GetTLEv", ExactSpelling = true)]
        private static extern ImVec2 GetTL_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImVec2 GetTL()
        {
            fixed (ImRect* @this = &this)
            { return GetTL_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect5GetTREv", ExactSpelling = true)]
        private static extern ImVec2 GetTR_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImVec2 GetTR()
        {
            fixed (ImRect* @this = &this)
            { return GetTR_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect5GetBLEv", ExactSpelling = true)]
        private static extern ImVec2 GetBL_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImVec2 GetBL()
        {
            fixed (ImRect* @this = &this)
            { return GetBL_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect5GetBREv", ExactSpelling = true)]
        private static extern ImVec2 GetBR_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImVec2 GetBR()
        {
            fixed (ImRect* @this = &this)
            { return GetBR_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect8ContainsERK6ImVec2", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool Contains_PInvoke(ImRect* @this, ImVec2* p);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool Contains(ImVec2* p)
        {
            fixed (ImRect* @this = &this)
            { return Contains_PInvoke(@this, p); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect8ContainsERKS_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool Contains_PInvoke(ImRect* @this, ImRect* r);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool Contains(ImRect* r)
        {
            fixed (ImRect* @this = &this)
            { return Contains_PInvoke(@this, r); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect8OverlapsERKS_", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool Overlaps_PInvoke(ImRect* @this, ImRect* r);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool Overlaps(ImRect* r)
        {
            fixed (ImRect* @this = &this)
            { return Overlaps_PInvoke(@this, r); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN6ImRect3AddERK6ImVec2", ExactSpelling = true)]
        private static extern void Add_PInvoke(ImRect* @this, ImVec2* p);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Add(ImVec2* p)
        {
            fixed (ImRect* @this = &this)
            { Add_PInvoke(@this, p); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN6ImRect3AddERKS_", ExactSpelling = true)]
        private static extern void Add_PInvoke(ImRect* @this, ImRect* r);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Add(ImRect* r)
        {
            fixed (ImRect* @this = &this)
            { Add_PInvoke(@this, r); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN6ImRect6ExpandEf", ExactSpelling = true)]
        private static extern void Expand_PInvoke(ImRect* @this, float amount);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Expand(float amount)
        {
            fixed (ImRect* @this = &this)
            { Expand_PInvoke(@this, amount); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN6ImRect6ExpandERK6ImVec2", ExactSpelling = true)]
        private static extern void Expand_PInvoke(ImRect* @this, ImVec2* amount);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Expand(ImVec2* amount)
        {
            fixed (ImRect* @this = &this)
            { Expand_PInvoke(@this, amount); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN6ImRect9TranslateERK6ImVec2", ExactSpelling = true)]
        private static extern void Translate_PInvoke(ImRect* @this, ImVec2* d);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Translate(ImVec2* d)
        {
            fixed (ImRect* @this = &this)
            { Translate_PInvoke(@this, d); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN6ImRect10TranslateXEf", ExactSpelling = true)]
        private static extern void TranslateX_PInvoke(ImRect* @this, float dx);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void TranslateX(float dx)
        {
            fixed (ImRect* @this = &this)
            { TranslateX_PInvoke(@this, dx); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN6ImRect10TranslateYEf", ExactSpelling = true)]
        private static extern void TranslateY_PInvoke(ImRect* @this, float dy);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void TranslateY(float dy)
        {
            fixed (ImRect* @this = &this)
            { TranslateY_PInvoke(@this, dy); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN6ImRect8ClipWithERKS_", ExactSpelling = true)]
        private static extern void ClipWith_PInvoke(ImRect* @this, ImRect* r);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void ClipWith(ImRect* r)
        {
            fixed (ImRect* @this = &this)
            { ClipWith_PInvoke(@this, r); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN6ImRect12ClipWithFullERKS_", ExactSpelling = true)]
        private static extern void ClipWithFull_PInvoke(ImRect* @this, ImRect* r);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void ClipWithFull(ImRect* r)
        {
            fixed (ImRect* @this = &this)
            { ClipWithFull_PInvoke(@this, r); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZN6ImRect5FloorEv", ExactSpelling = true)]
        private static extern void Floor_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Floor()
        {
            fixed (ImRect* @this = &this)
            { Floor_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect10IsInvertedEv", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool IsInverted_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool IsInverted()
        {
            fixed (ImRect* @this = &this)
            { return IsInverted_PInvoke(@this); }
        }

        [DllImport("libInfectedImGui.Native.so", CallingConvention = CallingConvention.Cdecl, EntryPoint = "_ZNK6ImRect6ToVec4Ev", ExactSpelling = true)]
        private static extern ImVec4 ToVec4_PInvoke(ImRect* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImVec4 ToVec4()
        {
            fixed (ImRect* @this = &this)
            { return ToVec4_PInvoke(@this); }
        }
    }
}
