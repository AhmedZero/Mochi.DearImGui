// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Runtime.InteropServices;

public unsafe static partial class imgui
{
    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z", ExactSpelling = true)]
    public static extern ImGuiContext* CreateContext(ImFontAtlas* shared_font_atlas = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DestroyContext@ImGui@@YAXPEAUImGuiContext@@@Z", ExactSpelling = true)]
    public static extern void DestroyContext(ImGuiContext* ctx = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ", ExactSpelling = true)]
    public static extern ImGuiContext* GetCurrentContext();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z", ExactSpelling = true)]
    public static extern void SetCurrentContext(ImGuiContext* ctx);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetIO@ImGui@@YAAEAUImGuiIO@@XZ", ExactSpelling = true)]
    public static extern ImGuiIO* GetIO();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ", ExactSpelling = true)]
    public static extern ImGuiStyle* GetStyle();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?NewFrame@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void NewFrame();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndFrame@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndFrame();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Render@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void Render();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetDrawData@ImGui@@YAPEAUImDrawData@@XZ", ExactSpelling = true)]
    public static extern ImDrawData* GetDrawData();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ShowDemoWindow@ImGui@@YAXPEA_N@Z", ExactSpelling = true)]
    public static extern void ShowDemoWindow(bool* p_open = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ShowMetricsWindow@ImGui@@YAXPEA_N@Z", ExactSpelling = true)]
    public static extern void ShowMetricsWindow(bool* p_open = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ShowAboutWindow@ImGui@@YAXPEA_N@Z", ExactSpelling = true)]
    public static extern void ShowAboutWindow(bool* p_open = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ShowStyleEditor@ImGui@@YAXPEAUImGuiStyle@@@Z", ExactSpelling = true)]
    public static extern void ShowStyleEditor(ImGuiStyle* @ref = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ShowStyleSelector@ImGui@@YA_NPEBD@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool ShowStyleSelector(byte* label);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ShowFontSelector@ImGui@@YAXPEBD@Z", ExactSpelling = true)]
    public static extern void ShowFontSelector(byte* label);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ShowUserGuide@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void ShowUserGuide();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetVersion@ImGui@@YAPEBDXZ", ExactSpelling = true)]
    public static extern byte* GetVersion();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z", ExactSpelling = true)]
    public static extern void StyleColorsDark(ImGuiStyle* dst = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?StyleColorsLight@ImGui@@YAXPEAUImGuiStyle@@@Z", ExactSpelling = true)]
    public static extern void StyleColorsLight(ImGuiStyle* dst = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?StyleColorsClassic@ImGui@@YAXPEAUImGuiStyle@@@Z", ExactSpelling = true)]
    public static extern void StyleColorsClassic(ImGuiStyle* dst = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Begin@ImGui@@YA_NPEBDPEA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool Begin(byte* name, bool* p_open = null, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?End@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void End();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginChild@ImGui@@YA_NPEBDAEBUImVec2@@_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginChild(byte* str_id, ImVec2* size, [MarshalAs(UnmanagedType.I1)] bool border = false, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginChild(uint id, ImVec2* size, [MarshalAs(UnmanagedType.I1)] bool border = false, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndChild@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndChild();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsWindowAppearing@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsWindowAppearing();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsWindowCollapsed@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsWindowCollapsed();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsWindowFocused@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsWindowFocused(ImGuiFocusedFlags flags = ImGuiFocusedFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsWindowHovered@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsWindowHovered(ImGuiHoveredFlags flags = ImGuiHoveredFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ", ExactSpelling = true)]
    public static extern ImDrawList* GetWindowDrawList();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowDpiScale@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetWindowDpiScale();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowPos@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetWindowPos();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowSize@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetWindowSize();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowWidth@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetWindowWidth();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowHeight@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetWindowHeight();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowViewport@ImGui@@YAPEAUImGuiViewport@@XZ", ExactSpelling = true)]
    public static extern ImGuiViewport* GetWindowViewport();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z", ExactSpelling = true)]
    public static extern void SetNextWindowPos(ImVec2* pos, ImGuiCond cond, ImVec2* pivot);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z", ExactSpelling = true)]
    public static extern void SetNextWindowSize(ImVec2* size, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextWindowSizeConstraints@ImGui@@YAXAEBUImVec2@@0P6AXPEAUImGuiSizeCallbackData@@@ZPEAX@Z", ExactSpelling = true)]
    public static extern void SetNextWindowSizeConstraints(ImVec2* size_min, ImVec2* size_max, delegate* unmanaged[Cdecl]<ImGuiSizeCallbackData*, void> custom_callback = null, void* custom_callback_data = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextWindowContentSize@ImGui@@YAXAEBUImVec2@@@Z", ExactSpelling = true)]
    public static extern void SetNextWindowContentSize(ImVec2* size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextWindowCollapsed@ImGui@@YAX_NH@Z", ExactSpelling = true)]
    public static extern void SetNextWindowCollapsed([MarshalAs(UnmanagedType.I1)] bool collapsed, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextWindowFocus@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void SetNextWindowFocus();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextWindowBgAlpha@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void SetNextWindowBgAlpha(float alpha);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextWindowViewport@ImGui@@YAXI@Z", ExactSpelling = true)]
    public static extern void SetNextWindowViewport(uint viewport_id);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetWindowPos@ImGui@@YAXAEBUImVec2@@H@Z", ExactSpelling = true)]
    public static extern void SetWindowPos(ImVec2* pos, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetWindowSize@ImGui@@YAXAEBUImVec2@@H@Z", ExactSpelling = true)]
    public static extern void SetWindowSize(ImVec2* size, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetWindowCollapsed@ImGui@@YAX_NH@Z", ExactSpelling = true)]
    public static extern void SetWindowCollapsed([MarshalAs(UnmanagedType.I1)] bool collapsed, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetWindowFocus@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void SetWindowFocus();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetWindowFontScale@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void SetWindowFontScale(float scale);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetWindowPos@ImGui@@YAXPEBDAEBUImVec2@@H@Z", ExactSpelling = true)]
    public static extern void SetWindowPos(byte* name, ImVec2* pos, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetWindowSize@ImGui@@YAXPEBDAEBUImVec2@@H@Z", ExactSpelling = true)]
    public static extern void SetWindowSize(byte* name, ImVec2* size, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetWindowCollapsed@ImGui@@YAXPEBD_NH@Z", ExactSpelling = true)]
    public static extern void SetWindowCollapsed(byte* name, [MarshalAs(UnmanagedType.I1)] bool collapsed, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetWindowFocus@ImGui@@YAXPEBD@Z", ExactSpelling = true)]
    public static extern void SetWindowFocus(byte* name);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetContentRegionAvail@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetContentRegionAvail();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetContentRegionMax();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowContentRegionMin@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetWindowContentRegionMin();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowContentRegionMax@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetWindowContentRegionMax();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowContentRegionWidth@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetWindowContentRegionWidth();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetScrollX@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetScrollX();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetScrollY@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetScrollY();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetScrollX@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void SetScrollX(float scroll_x);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetScrollY@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void SetScrollY(float scroll_y);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetScrollMaxX@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetScrollMaxX();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetScrollMaxY@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetScrollMaxY();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetScrollHereX@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void SetScrollHereX(float center_x_ratio = 0.5f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetScrollHereY@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void SetScrollHereY(float center_y_ratio = 0.5f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetScrollFromPosX@ImGui@@YAXMM@Z", ExactSpelling = true)]
    public static extern void SetScrollFromPosX(float local_x, float center_x_ratio = 0.5f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetScrollFromPosY@ImGui@@YAXMM@Z", ExactSpelling = true)]
    public static extern void SetScrollFromPosY(float local_y, float center_y_ratio = 0.5f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushFont@ImGui@@YAXPEAUImFont@@@Z", ExactSpelling = true)]
    public static extern void PushFont(ImFont* font);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PopFont@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void PopFont();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushStyleColor@ImGui@@YAXHI@Z", ExactSpelling = true)]
    public static extern void PushStyleColor(ImGuiCol idx, uint col);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z", ExactSpelling = true)]
    public static extern void PushStyleColor(ImGuiCol idx, ImVec4* col);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PopStyleColor@ImGui@@YAXH@Z", ExactSpelling = true)]
    public static extern void PopStyleColor(int count = 1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushStyleVar@ImGui@@YAXHM@Z", ExactSpelling = true)]
    public static extern void PushStyleVar(ImGuiStyleVar idx, float val);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z", ExactSpelling = true)]
    public static extern void PushStyleVar(ImGuiStyleVar idx, ImVec2* val);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PopStyleVar@ImGui@@YAXH@Z", ExactSpelling = true)]
    public static extern void PopStyleVar(int count = 1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushAllowKeyboardFocus@ImGui@@YAX_N@Z", ExactSpelling = true)]
    public static extern void PushAllowKeyboardFocus([MarshalAs(UnmanagedType.I1)] bool allow_keyboard_focus);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PopAllowKeyboardFocus@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void PopAllowKeyboardFocus();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushButtonRepeat@ImGui@@YAX_N@Z", ExactSpelling = true)]
    public static extern void PushButtonRepeat([MarshalAs(UnmanagedType.I1)] bool repeat);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PopButtonRepeat@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void PopButtonRepeat();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushItemWidth@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void PushItemWidth(float item_width);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PopItemWidth@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void PopItemWidth();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextItemWidth@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void SetNextItemWidth(float item_width);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CalcItemWidth@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float CalcItemWidth();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushTextWrapPos@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void PushTextWrapPos(float wrap_local_pos_x = 0f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PopTextWrapPos@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void PopTextWrapPos();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetFont@ImGui@@YAPEAUImFont@@XZ", ExactSpelling = true)]
    public static extern ImFont* GetFont();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetFontSize@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetFontSize();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetFontTexUvWhitePixel@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetFontTexUvWhitePixel();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetColorU32@ImGui@@YAIHM@Z", ExactSpelling = true)]
    public static extern uint GetColorU32(ImGuiCol idx, float alpha_mul = 1f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z", ExactSpelling = true)]
    public static extern uint GetColorU32(ImVec4* col);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetColorU32@ImGui@@YAII@Z", ExactSpelling = true)]
    public static extern uint GetColorU32(uint col);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z", ExactSpelling = true)]
    public static extern ImVec4* GetStyleColorVec4(ImGuiCol idx);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Separator@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void Separator();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SameLine@ImGui@@YAXMM@Z", ExactSpelling = true)]
    public static extern void SameLine(float offset_from_start_x = 0f, float spacing = -1f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?NewLine@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void NewLine();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Spacing@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void Spacing();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Dummy@ImGui@@YAXAEBUImVec2@@@Z", ExactSpelling = true)]
    public static extern void Dummy(ImVec2* size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Indent@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void Indent(float indent_w = 0f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Unindent@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void Unindent(float indent_w = 0f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginGroup@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void BeginGroup();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndGroup@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndGroup();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetCursorPos@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetCursorPos();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetCursorPosX@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetCursorPosX();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetCursorPosY@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetCursorPosY();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetCursorPos@ImGui@@YAXAEBUImVec2@@@Z", ExactSpelling = true)]
    public static extern void SetCursorPos(ImVec2* local_pos);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetCursorPosX@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void SetCursorPosX(float local_x);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetCursorPosY@ImGui@@YAXM@Z", ExactSpelling = true)]
    public static extern void SetCursorPosY(float local_y);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetCursorStartPos@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetCursorStartPos();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetCursorScreenPos@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetCursorScreenPos();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetCursorScreenPos@ImGui@@YAXAEBUImVec2@@@Z", ExactSpelling = true)]
    public static extern void SetCursorScreenPos(ImVec2* pos);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?AlignTextToFramePadding@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void AlignTextToFramePadding();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetTextLineHeight@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetTextLineHeight();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetTextLineHeightWithSpacing@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetTextLineHeightWithSpacing();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetFrameHeight@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetFrameHeight();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetFrameHeightWithSpacing@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetFrameHeightWithSpacing();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushID@ImGui@@YAXPEBD@Z", ExactSpelling = true)]
    public static extern void PushID(byte* str_id);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushID@ImGui@@YAXPEBD0@Z", ExactSpelling = true)]
    public static extern void PushID(byte* str_id_begin, byte* str_id_end);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushID@ImGui@@YAXPEBX@Z", ExactSpelling = true)]
    public static extern void PushID(void* ptr_id);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushID@ImGui@@YAXH@Z", ExactSpelling = true)]
    public static extern void PushID(int int_id);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PopID@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void PopID();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetID@ImGui@@YAIPEBD@Z", ExactSpelling = true)]
    public static extern uint GetID(byte* str_id);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetID@ImGui@@YAIPEBD0@Z", ExactSpelling = true)]
    public static extern uint GetID(byte* str_id_begin, byte* str_id_end);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetID@ImGui@@YAIPEBX@Z", ExactSpelling = true)]
    public static extern uint GetID(void* ptr_id);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TextUnformatted@ImGui@@YAXPEBD0@Z", ExactSpelling = true)]
    public static extern void TextUnformatted(byte* text, byte* text_end = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Text@ImGui@@YAXPEBDZZ", ExactSpelling = true)]
    public static extern void Text(byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TextV@ImGui@@YAXPEBDPEAD@Z", ExactSpelling = true)]
    public static extern void TextV(byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TextColored@ImGui@@YAXAEBUImVec4@@PEBDZZ", ExactSpelling = true)]
    public static extern void TextColored(ImVec4* col, byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TextColoredV@ImGui@@YAXAEBUImVec4@@PEBDPEAD@Z", ExactSpelling = true)]
    public static extern void TextColoredV(ImVec4* col, byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TextDisabled@ImGui@@YAXPEBDZZ", ExactSpelling = true)]
    public static extern void TextDisabled(byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TextDisabledV@ImGui@@YAXPEBDPEAD@Z", ExactSpelling = true)]
    public static extern void TextDisabledV(byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TextWrapped@ImGui@@YAXPEBDZZ", ExactSpelling = true)]
    public static extern void TextWrapped(byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TextWrappedV@ImGui@@YAXPEBDPEAD@Z", ExactSpelling = true)]
    public static extern void TextWrappedV(byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?LabelText@ImGui@@YAXPEBD0ZZ", ExactSpelling = true)]
    public static extern void LabelText(byte* label, byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?LabelTextV@ImGui@@YAXPEBD0PEAD@Z", ExactSpelling = true)]
    public static extern void LabelTextV(byte* label, byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BulletText@ImGui@@YAXPEBDZZ", ExactSpelling = true)]
    public static extern void BulletText(byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BulletTextV@ImGui@@YAXPEBDPEAD@Z", ExactSpelling = true)]
    public static extern void BulletTextV(byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Button@ImGui@@YA_NPEBDAEBUImVec2@@@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool Button(byte* label, ImVec2* size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SmallButton@ImGui@@YA_NPEBD@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SmallButton(byte* label);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InvisibleButton@ImGui@@YA_NPEBDAEBUImVec2@@H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InvisibleButton(byte* str_id, ImVec2* size, ImGuiButtonFlags flags = ImGuiButtonFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ArrowButton@ImGui@@YA_NPEBDH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool ArrowButton(byte* str_id, ImGuiDir dir);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Image@ImGui@@YAXPEAXAEBUImVec2@@11AEBUImVec4@@2@Z", ExactSpelling = true)]
    public static extern void Image(void* user_texture_id, ImVec2* size, ImVec2* uv0, ImVec2* uv1, ImVec4* tint_col, ImVec4* border_col);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ImageButton@ImGui@@YA_NPEAXAEBUImVec2@@11HAEBUImVec4@@2@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool ImageButton(void* user_texture_id, ImVec2* size, ImVec2* uv0, ImVec2* uv1, int frame_padding, ImVec4* bg_col, ImVec4* tint_col);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Checkbox@ImGui@@YA_NPEBDPEA_N@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool Checkbox(byte* label, bool* v);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CheckboxFlags@ImGui@@YA_NPEBDPEAHH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool CheckboxFlags(byte* label, int* flags, int flags_value);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CheckboxFlags@ImGui@@YA_NPEBDPEAII@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool CheckboxFlags(byte* label, uint* flags, uint flags_value);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?RadioButton@ImGui@@YA_NPEBD_N@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool RadioButton(byte* label, [MarshalAs(UnmanagedType.I1)] bool active);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?RadioButton@ImGui@@YA_NPEBDPEAHH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool RadioButton(byte* label, int* v, int v_button);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ProgressBar@ImGui@@YAXMAEBUImVec2@@PEBD@Z", ExactSpelling = true)]
    public static extern void ProgressBar(float fraction, ImVec2* size_arg, byte* overlay = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Bullet@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void Bullet();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginCombo@ImGui@@YA_NPEBD0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginCombo(byte* label, byte* preview_value, ImGuiComboFlags flags = ImGuiComboFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndCombo@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndCombo();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Combo@ImGui@@YA_NPEBDPEAHQEBQEBDHH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool Combo(byte* label, int* current_item, byte** items, int items_count, int popup_max_height_in_items = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Combo@ImGui@@YA_NPEBDPEAH0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool Combo(byte* label, int* current_item, byte* items_separated_by_zeros, int popup_max_height_in_items = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Combo@ImGui@@YA_NPEBDPEAHP6A_NPEAXHPEAPEBD@Z2HH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool Combo(byte* label, int* current_item, delegate* unmanaged[Cdecl]<void*, int, byte**, NativeBoolean> items_getter, void* data, int items_count, int popup_max_height_in_items = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragFloat@ImGui@@YA_NPEBDPEAMMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragFloat(byte* label, float* v, float v_speed, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragFloat2@ImGui@@YA_NPEBDQEAMMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragFloat2(byte* label, ConstantArray_float_2 v, float v_speed, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragFloat3@ImGui@@YA_NPEBDQEAMMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragFloat3(byte* label, ConstantArray_float_3 v, float v_speed, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragFloat4@ImGui@@YA_NPEBDQEAMMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragFloat4(byte* label, ConstantArray_float_4 v, float v_speed, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragFloatRange2@ImGui@@YA_NPEBDPEAM1MMM00H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragFloatRange2(byte* label, float* v_current_min, float* v_current_max, float v_speed, float v_min, float v_max, byte* format, byte* format_max = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragInt@ImGui@@YA_NPEBDPEAHMHH0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragInt(byte* label, int* v, float v_speed, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragInt2@ImGui@@YA_NPEBDQEAHMHH0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragInt2(byte* label, ConstantArray_int_2 v, float v_speed, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragInt3@ImGui@@YA_NPEBDQEAHMHH0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragInt3(byte* label, ConstantArray_int_3 v, float v_speed, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragInt4@ImGui@@YA_NPEBDQEAHMHH0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragInt4(byte* label, ConstantArray_int_4 v, float v_speed, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragIntRange2@ImGui@@YA_NPEBDPEAH1MHH00H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragIntRange2(byte* label, int* v_current_min, int* v_current_max, float v_speed, int v_min, int v_max, byte* format, byte* format_max = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragScalar@ImGui@@YA_NPEBDHPEAXMPEBX20H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragScalar(byte* label, ImGuiDataType data_type, void* p_data, float v_speed, void* p_min = null, void* p_max = null, byte* format = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DragScalarN@ImGui@@YA_NPEBDHPEAXHMPEBX20H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DragScalarN(byte* label, ImGuiDataType data_type, void* p_data, int components, float v_speed, void* p_min = null, void* p_max = null, byte* format = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderFloat@ImGui@@YA_NPEBDPEAMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderFloat(byte* label, float* v, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderFloat2@ImGui@@YA_NPEBDQEAMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderFloat2(byte* label, ConstantArray_float_2 v, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderFloat3@ImGui@@YA_NPEBDQEAMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderFloat3(byte* label, ConstantArray_float_3 v, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderFloat4@ImGui@@YA_NPEBDQEAMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderFloat4(byte* label, ConstantArray_float_4 v, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderAngle@ImGui@@YA_NPEBDPEAMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderAngle(byte* label, float* v_rad, float v_degrees_min, float v_degrees_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderInt@ImGui@@YA_NPEBDPEAHHH0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderInt(byte* label, int* v, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderInt2@ImGui@@YA_NPEBDQEAHHH0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderInt2(byte* label, ConstantArray_int_2 v, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderInt3@ImGui@@YA_NPEBDQEAHHH0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderInt3(byte* label, ConstantArray_int_3 v, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderInt4@ImGui@@YA_NPEBDQEAHHH0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderInt4(byte* label, ConstantArray_int_4 v, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderScalar(byte* label, ImGuiDataType data_type, void* p_data, void* p_min, void* p_max, byte* format = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SliderScalarN@ImGui@@YA_NPEBDHPEAXHPEBX20H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SliderScalarN(byte* label, ImGuiDataType data_type, void* p_data, int components, void* p_min, void* p_max, byte* format = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?VSliderFloat@ImGui@@YA_NPEBDAEBUImVec2@@PEAMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool VSliderFloat(byte* label, ImVec2* size, float* v, float v_min, float v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?VSliderInt@ImGui@@YA_NPEBDAEBUImVec2@@PEAHHH0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool VSliderInt(byte* label, ImVec2* size, int* v, int v_min, int v_max, byte* format, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?VSliderScalar@ImGui@@YA_NPEBDAEBUImVec2@@HPEAXPEBX30H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool VSliderScalar(byte* label, ImVec2* size, ImGuiDataType data_type, void* p_data, void* p_min, void* p_max, byte* format = null, ImGuiSliderFlags flags = ImGuiSliderFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputText@ImGui@@YA_NPEBDPEAD_KHP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputText(byte* label, byte* buf, ulong buf_size, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None, delegate* unmanaged[Cdecl]<ImGuiInputTextCallbackData*, int> callback = null, void* user_data = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputTextMultiline@ImGui@@YA_NPEBDPEAD_KAEBUImVec2@@HP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputTextMultiline(byte* label, byte* buf, ulong buf_size, ImVec2* size, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None, delegate* unmanaged[Cdecl]<ImGuiInputTextCallbackData*, int> callback = null, void* user_data = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputTextWithHint@ImGui@@YA_NPEBD0PEAD_KHP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputTextWithHint(byte* label, byte* hint, byte* buf, ulong buf_size, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None, delegate* unmanaged[Cdecl]<ImGuiInputTextCallbackData*, int> callback = null, void* user_data = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputFloat@ImGui@@YA_NPEBDPEAMMM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputFloat(byte* label, float* v, float step, float step_fast, byte* format, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputFloat2@ImGui@@YA_NPEBDQEAM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputFloat2(byte* label, ConstantArray_float_2 v, byte* format, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputFloat3@ImGui@@YA_NPEBDQEAM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputFloat3(byte* label, ConstantArray_float_3 v, byte* format, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputFloat4@ImGui@@YA_NPEBDQEAM0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputFloat4(byte* label, ConstantArray_float_4 v, byte* format, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputInt@ImGui@@YA_NPEBDPEAHHHH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputInt(byte* label, int* v, int step = 1, int step_fast = 100, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputInt2@ImGui@@YA_NPEBDQEAHH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputInt2(byte* label, ConstantArray_int_2 v, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputInt3@ImGui@@YA_NPEBDQEAHH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputInt3(byte* label, ConstantArray_int_3 v, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputInt4@ImGui@@YA_NPEBDQEAHH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputInt4(byte* label, ConstantArray_int_4 v, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputDouble@ImGui@@YA_NPEBDPEANNN0H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputDouble(byte* label, double* v, double step, double step_fast, byte* format, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputScalar(byte* label, ImGuiDataType data_type, void* p_data, void* p_step = null, void* p_step_fast = null, byte* format = null, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?InputScalarN@ImGui@@YA_NPEBDHPEAXHPEBX20H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool InputScalarN(byte* label, ImGuiDataType data_type, void* p_data, int components, void* p_step = null, void* p_step_fast = null, byte* format = null, ImGuiInputTextFlags flags = ImGuiInputTextFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ColorEdit3@ImGui@@YA_NPEBDQEAMH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool ColorEdit3(byte* label, ConstantArray_float_3 col, ImGuiColorEditFlags flags = ImGuiColorEditFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ColorEdit4@ImGui@@YA_NPEBDQEAMH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool ColorEdit4(byte* label, ConstantArray_float_4 col, ImGuiColorEditFlags flags = ImGuiColorEditFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ColorPicker3@ImGui@@YA_NPEBDQEAMH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool ColorPicker3(byte* label, ConstantArray_float_3 col, ImGuiColorEditFlags flags = ImGuiColorEditFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ColorPicker4@ImGui@@YA_NPEBDQEAMHPEBM@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool ColorPicker4(byte* label, ConstantArray_float_4 col, ImGuiColorEditFlags flags = ImGuiColorEditFlags.None, float* ref_col = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ColorButton@ImGui@@YA_NPEBDAEBUImVec4@@HUImVec2@@@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool ColorButton(byte* desc_id, ImVec4* col, ImGuiColorEditFlags flags, ImVec2 size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetColorEditOptions@ImGui@@YAXH@Z", ExactSpelling = true)]
    public static extern void SetColorEditOptions(ImGuiColorEditFlags flags);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreeNode@ImGui@@YA_NPEBD@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TreeNode(byte* label);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreeNode@ImGui@@YA_NPEBD0ZZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TreeNode(byte* str_id, byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreeNode@ImGui@@YA_NPEBXPEBDZZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TreeNode(void* ptr_id, byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreeNodeV@ImGui@@YA_NPEBD0PEAD@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TreeNodeV(byte* str_id, byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreeNodeV@ImGui@@YA_NPEBXPEBDPEAD@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TreeNodeV(void* ptr_id, byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreeNodeEx@ImGui@@YA_NPEBDH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TreeNodeEx(byte* label, ImGuiTreeNodeFlags flags = ImGuiTreeNodeFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreeNodeEx@ImGui@@YA_NPEBDH0ZZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TreeNodeEx(byte* str_id, ImGuiTreeNodeFlags flags, byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreeNodeEx@ImGui@@YA_NPEBXHPEBDZZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TreeNodeEx(void* ptr_id, ImGuiTreeNodeFlags flags, byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreeNodeExV@ImGui@@YA_NPEBDH0PEAD@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TreeNodeExV(byte* str_id, ImGuiTreeNodeFlags flags, byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreeNodeExV@ImGui@@YA_NPEBXHPEBDPEAD@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TreeNodeExV(void* ptr_id, ImGuiTreeNodeFlags flags, byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreePush@ImGui@@YAXPEBD@Z", ExactSpelling = true)]
    public static extern void TreePush(byte* str_id);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreePush@ImGui@@YAXPEBX@Z", ExactSpelling = true)]
    public static extern void TreePush(void* ptr_id = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TreePop@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void TreePop();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetTreeNodeToLabelSpacing@ImGui@@YAMXZ", ExactSpelling = true)]
    public static extern float GetTreeNodeToLabelSpacing();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CollapsingHeader@ImGui@@YA_NPEBDH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool CollapsingHeader(byte* label, ImGuiTreeNodeFlags flags = ImGuiTreeNodeFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CollapsingHeader@ImGui@@YA_NPEBDPEA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool CollapsingHeader(byte* label, bool* p_visible, ImGuiTreeNodeFlags flags = ImGuiTreeNodeFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextItemOpen@ImGui@@YAX_NH@Z", ExactSpelling = true)]
    public static extern void SetNextItemOpen([MarshalAs(UnmanagedType.I1)] bool is_open, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Selectable@ImGui@@YA_NPEBD_NHAEBUImVec2@@@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool Selectable(byte* label, [MarshalAs(UnmanagedType.I1)] bool selected, ImGuiSelectableFlags flags, ImVec2* size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Selectable@ImGui@@YA_NPEBDPEA_NHAEBUImVec2@@@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool Selectable(byte* label, bool* p_selected, ImGuiSelectableFlags flags, ImVec2* size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginListBox@ImGui@@YA_NPEBDAEBUImVec2@@@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginListBox(byte* label, ImVec2* size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndListBox@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndListBox();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ListBox@ImGui@@YA_NPEBDPEAHQEBQEBDHH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool ListBox(byte* label, int* current_item, byte** items, int items_count, int height_in_items = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ListBox@ImGui@@YA_NPEBDPEAHP6A_NPEAXHPEAPEBD@Z2HH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool ListBox(byte* label, int* current_item, delegate* unmanaged[Cdecl]<void*, int, byte**, NativeBoolean> items_getter, void* data, int items_count, int height_in_items = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PlotLines@ImGui@@YAXPEBDPEBMHH0MMUImVec2@@H@Z", ExactSpelling = true)]
    public static extern void PlotLines(byte* label, float* values, int values_count, int values_offset, byte* overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride = 4);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PlotLines@ImGui@@YAXPEBDP6AMPEAXH@Z1HH0MMUImVec2@@@Z", ExactSpelling = true)]
    public static extern void PlotLines(byte* label, delegate* unmanaged[Cdecl]<void*, int, float> values_getter, void* data, int values_count, int values_offset, byte* overlay_text, float scale_min, float scale_max, ImVec2 graph_size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PlotHistogram@ImGui@@YAXPEBDPEBMHH0MMUImVec2@@H@Z", ExactSpelling = true)]
    public static extern void PlotHistogram(byte* label, float* values, int values_count, int values_offset, byte* overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride = 4);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PlotHistogram@ImGui@@YAXPEBDP6AMPEAXH@Z1HH0MMUImVec2@@@Z", ExactSpelling = true)]
    public static extern void PlotHistogram(byte* label, delegate* unmanaged[Cdecl]<void*, int, float> values_getter, void* data, int values_count, int values_offset, byte* overlay_text, float scale_min, float scale_max, ImVec2 graph_size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Value@ImGui@@YAXPEBD_N@Z", ExactSpelling = true)]
    public static extern void Value(byte* prefix, [MarshalAs(UnmanagedType.I1)] bool b);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Value@ImGui@@YAXPEBDH@Z", ExactSpelling = true)]
    public static extern void Value(byte* prefix, int v);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Value@ImGui@@YAXPEBDI@Z", ExactSpelling = true)]
    public static extern void Value(byte* prefix, uint v);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Value@ImGui@@YAXPEBDM0@Z", ExactSpelling = true)]
    public static extern void Value(byte* prefix, float v, byte* float_format = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginMenuBar@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginMenuBar();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndMenuBar@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndMenuBar();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginMainMenuBar@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginMainMenuBar();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndMainMenuBar@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndMainMenuBar();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginMenu@ImGui@@YA_NPEBD_N@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginMenu(byte* label, [MarshalAs(UnmanagedType.I1)] bool enabled = true);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndMenu@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndMenu();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?MenuItem@ImGui@@YA_NPEBD0_N1@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool MenuItem(byte* label, byte* shortcut = null, [MarshalAs(UnmanagedType.I1)] bool selected = false, [MarshalAs(UnmanagedType.I1)] bool enabled = true);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?MenuItem@ImGui@@YA_NPEBD0PEA_N_N@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool MenuItem(byte* label, byte* shortcut, bool* p_selected, [MarshalAs(UnmanagedType.I1)] bool enabled = true);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginTooltip@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void BeginTooltip();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndTooltip@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndTooltip();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetTooltip@ImGui@@YAXPEBDZZ", ExactSpelling = true)]
    public static extern void SetTooltip(byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetTooltipV@ImGui@@YAXPEBDPEAD@Z", ExactSpelling = true)]
    public static extern void SetTooltipV(byte* fmt, byte* args);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginPopup@ImGui@@YA_NPEBDH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginPopup(byte* str_id, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginPopupModal(byte* name, bool* p_open = null, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndPopup@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndPopup();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?OpenPopup@ImGui@@YAXPEBDH@Z", ExactSpelling = true)]
    public static extern void OpenPopup(byte* str_id, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z", ExactSpelling = true)]
    public static extern void OpenPopupOnItemClick(byte* str_id = null, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.MouseButtonRight);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CloseCurrentPopup@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void CloseCurrentPopup();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginPopupContextItem@ImGui@@YA_NPEBDH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginPopupContextItem(byte* str_id = null, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.MouseButtonRight);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginPopupContextWindow@ImGui@@YA_NPEBDH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginPopupContextWindow(byte* str_id = null, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.MouseButtonRight);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginPopupContextVoid@ImGui@@YA_NPEBDH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginPopupContextVoid(byte* str_id = null, ImGuiPopupFlags popup_flags = ImGuiPopupFlags.MouseButtonRight);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsPopupOpen@ImGui@@YA_NPEBDH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsPopupOpen(byte* str_id, ImGuiPopupFlags flags = ImGuiPopupFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginTable@ImGui@@YA_NPEBDHHAEBUImVec2@@M@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginTable(byte* str_id, int column, ImGuiTableFlags flags, ImVec2* outer_size, float inner_width = 0f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndTable@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndTable();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableNextRow@ImGui@@YAXHM@Z", ExactSpelling = true)]
    public static extern void TableNextRow(ImGuiTableRowFlags row_flags = ImGuiTableRowFlags.None, float min_row_height = 0f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableNextColumn@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TableNextColumn();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableSetColumnIndex@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TableSetColumnIndex(int column_n);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableSetupColumn@ImGui@@YAXPEBDHMI@Z", ExactSpelling = true)]
    public static extern void TableSetupColumn(byte* label, ImGuiTableColumnFlags flags = ImGuiTableColumnFlags.None, float init_width_or_weight = 0f, uint user_id = 0);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableSetupScrollFreeze@ImGui@@YAXHH@Z", ExactSpelling = true)]
    public static extern void TableSetupScrollFreeze(int cols, int rows);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableHeadersRow@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void TableHeadersRow();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableHeader@ImGui@@YAXPEBD@Z", ExactSpelling = true)]
    public static extern void TableHeader(byte* label);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableGetSortSpecs@ImGui@@YAPEAUImGuiTableSortSpecs@@XZ", ExactSpelling = true)]
    public static extern ImGuiTableSortSpecs* TableGetSortSpecs();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableGetColumnCount@ImGui@@YAHXZ", ExactSpelling = true)]
    public static extern int TableGetColumnCount();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableGetColumnIndex@ImGui@@YAHXZ", ExactSpelling = true)]
    public static extern int TableGetColumnIndex();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableGetRowIndex@ImGui@@YAHXZ", ExactSpelling = true)]
    public static extern int TableGetRowIndex();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableGetColumnName@ImGui@@YAPEBDH@Z", ExactSpelling = true)]
    public static extern byte* TableGetColumnName(int column_n = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableGetColumnFlags@ImGui@@YAHH@Z", ExactSpelling = true)]
    public static extern ImGuiTableColumnFlags TableGetColumnFlags(int column_n = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TableSetBgColor@ImGui@@YAXHIH@Z", ExactSpelling = true)]
    public static extern void TableSetBgColor(ImGuiTableBgTarget target, uint color, int column_n = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Columns@ImGui@@YAXHPEBD_N@Z", ExactSpelling = true)]
    public static extern void Columns(int count = 1, byte* id = null, [MarshalAs(UnmanagedType.I1)] bool border = true);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?NextColumn@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void NextColumn();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetColumnIndex@ImGui@@YAHXZ", ExactSpelling = true)]
    public static extern int GetColumnIndex();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetColumnWidth@ImGui@@YAMH@Z", ExactSpelling = true)]
    public static extern float GetColumnWidth(int column_index = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetColumnWidth@ImGui@@YAXHM@Z", ExactSpelling = true)]
    public static extern void SetColumnWidth(int column_index, float width);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetColumnOffset@ImGui@@YAMH@Z", ExactSpelling = true)]
    public static extern float GetColumnOffset(int column_index = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetColumnOffset@ImGui@@YAXHM@Z", ExactSpelling = true)]
    public static extern void SetColumnOffset(int column_index, float offset_x);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetColumnsCount@ImGui@@YAHXZ", ExactSpelling = true)]
    public static extern int GetColumnsCount();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginTabBar@ImGui@@YA_NPEBDH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginTabBar(byte* str_id, ImGuiTabBarFlags flags = ImGuiTabBarFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndTabBar@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndTabBar();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginTabItem@ImGui@@YA_NPEBDPEA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginTabItem(byte* label, bool* p_open = null, ImGuiTabItemFlags flags = ImGuiTabItemFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndTabItem@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndTabItem();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TabItemButton@ImGui@@YA_NPEBDH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool TabItemButton(byte* label, ImGuiTabItemFlags flags = ImGuiTabItemFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetTabItemClosed@ImGui@@YAXPEBD@Z", ExactSpelling = true)]
    public static extern void SetTabItemClosed(byte* tab_or_docked_window_label);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DockSpace@ImGui@@YAXIAEBUImVec2@@HPEBUImGuiWindowClass@@@Z", ExactSpelling = true)]
    public static extern void DockSpace(uint id, ImVec2* size, ImGuiDockNodeFlags flags = ImGuiDockNodeFlags.None, ImGuiWindowClass* window_class = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DockSpaceOverViewport@ImGui@@YAIPEBUImGuiViewport@@HPEBUImGuiWindowClass@@@Z", ExactSpelling = true)]
    public static extern uint DockSpaceOverViewport(ImGuiViewport* viewport = null, ImGuiDockNodeFlags flags = ImGuiDockNodeFlags.None, ImGuiWindowClass* window_class = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextWindowDockID@ImGui@@YAXIH@Z", ExactSpelling = true)]
    public static extern void SetNextWindowDockID(uint dock_id, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetNextWindowClass@ImGui@@YAXPEBUImGuiWindowClass@@@Z", ExactSpelling = true)]
    public static extern void SetNextWindowClass(ImGuiWindowClass* window_class);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWindowDockID@ImGui@@YAIXZ", ExactSpelling = true)]
    public static extern uint GetWindowDockID();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsWindowDocked@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsWindowDocked();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?LogToTTY@ImGui@@YAXH@Z", ExactSpelling = true)]
    public static extern void LogToTTY(int auto_open_depth = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?LogToFile@ImGui@@YAXHPEBD@Z", ExactSpelling = true)]
    public static extern void LogToFile(int auto_open_depth = -1, byte* filename = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?LogToClipboard@ImGui@@YAXH@Z", ExactSpelling = true)]
    public static extern void LogToClipboard(int auto_open_depth = -1);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?LogFinish@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void LogFinish();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?LogButtons@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void LogButtons();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?LogText@ImGui@@YAXPEBDZZ", ExactSpelling = true)]
    public static extern void LogText(byte* fmt);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginDragDropSource@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginDragDropSource(ImGuiDragDropFlags flags = ImGuiDragDropFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool SetDragDropPayload(byte* type, void* data, ulong sz, ImGuiCond cond = ImGuiCond.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndDragDropSource@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndDragDropSource();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginDragDropTarget@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginDragDropTarget();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z", ExactSpelling = true)]
    public static extern ImGuiPayload* AcceptDragDropPayload(byte* type, ImGuiDragDropFlags flags = ImGuiDragDropFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndDragDropTarget@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndDragDropTarget();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetDragDropPayload@ImGui@@YAPEBUImGuiPayload@@XZ", ExactSpelling = true)]
    public static extern ImGuiPayload* GetDragDropPayload();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z", ExactSpelling = true)]
    public static extern void PushClipRect(ImVec2* clip_rect_min, ImVec2* clip_rect_max, [MarshalAs(UnmanagedType.I1)] bool intersect_with_current_clip_rect);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PopClipRect@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void PopClipRect();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetItemDefaultFocus@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void SetItemDefaultFocus();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetKeyboardFocusHere@ImGui@@YAXH@Z", ExactSpelling = true)]
    public static extern void SetKeyboardFocusHere(int offset = 0);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsItemHovered@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsItemHovered(ImGuiHoveredFlags flags = ImGuiHoveredFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsItemActive@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsItemActive();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsItemFocused@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsItemFocused();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsItemClicked@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsItemClicked(ImGuiMouseButton mouse_button = ImGuiMouseButton.Left);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsItemVisible@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsItemVisible();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsItemEdited@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsItemEdited();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsItemActivated@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsItemActivated();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsItemDeactivated@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsItemDeactivated();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsItemDeactivatedAfterEdit@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsItemDeactivatedAfterEdit();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsItemToggledOpen@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsItemToggledOpen();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsAnyItemHovered@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsAnyItemHovered();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsAnyItemActive@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsAnyItemActive();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsAnyItemFocused@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsAnyItemFocused();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetItemRectMin@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetItemRectMin();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetItemRectMax@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetItemRectMax();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetItemRectSize@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetItemRectSize();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetItemAllowOverlap@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void SetItemAllowOverlap();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ", ExactSpelling = true)]
    public static extern ImGuiViewport* GetMainViewport();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsRectVisible@ImGui@@YA_NAEBUImVec2@@@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsRectVisible(ImVec2* size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsRectVisible@ImGui@@YA_NAEBUImVec2@@0@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsRectVisible(ImVec2* rect_min, ImVec2* rect_max);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetTime@ImGui@@YANXZ", ExactSpelling = true)]
    public static extern double GetTime();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetFrameCount@ImGui@@YAHXZ", ExactSpelling = true)]
    public static extern int GetFrameCount();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@XZ", ExactSpelling = true)]
    public static extern ImDrawList* GetBackgroundDrawList();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ", ExactSpelling = true)]
    public static extern ImDrawList* GetForegroundDrawList();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z", ExactSpelling = true)]
    public static extern ImDrawList* GetBackgroundDrawList(ImGuiViewport* viewport);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z", ExactSpelling = true)]
    public static extern ImDrawList* GetForegroundDrawList(ImGuiViewport* viewport);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetDrawListSharedData@ImGui@@YAPEAUImDrawListSharedData@@XZ", ExactSpelling = true)]
    public static extern ImDrawListSharedData* GetDrawListSharedData();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetStyleColorName@ImGui@@YAPEBDH@Z", ExactSpelling = true)]
    public static extern byte* GetStyleColorName(ImGuiCol idx);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetStateStorage@ImGui@@YAXPEAUImGuiStorage@@@Z", ExactSpelling = true)]
    public static extern void SetStateStorage(ImGuiStorage* storage);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetStateStorage@ImGui@@YAPEAUImGuiStorage@@XZ", ExactSpelling = true)]
    public static extern ImGuiStorage* GetStateStorage();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CalcListClipping@ImGui@@YAXHMPEAH0@Z", ExactSpelling = true)]
    public static extern void CalcListClipping(int items_count, float items_height, int* out_items_display_start, int* out_items_display_end);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?BeginChildFrame@ImGui@@YA_NIAEBUImVec2@@H@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool BeginChildFrame(uint id, ImVec2* size, ImGuiWindowFlags flags = ImGuiWindowFlags.None);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?EndChildFrame@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void EndChildFrame();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z", ExactSpelling = true)]
    public static extern ImVec2 CalcTextSize(byte* text, byte* text_end = null, [MarshalAs(UnmanagedType.I1)] bool hide_text_after_double_hash = false, float wrap_width = -1f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ColorConvertU32ToFloat4@ImGui@@YA?AUImVec4@@I@Z", ExactSpelling = true)]
    public static extern ImVec4* ColorConvertU32ToFloat4(out ImVec4 __returnBuffer, uint @in);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z", ExactSpelling = true)]
    public static extern uint ColorConvertFloat4ToU32(ImVec4* @in);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ColorConvertRGBtoHSV@ImGui@@YAXMMMAEAM00@Z", ExactSpelling = true)]
    public static extern void ColorConvertRGBtoHSV(float r, float g, float b, float* out_h, float* out_s, float* out_v);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ColorConvertHSVtoRGB@ImGui@@YAXMMMAEAM00@Z", ExactSpelling = true)]
    public static extern void ColorConvertHSVtoRGB(float h, float s, float v, float* out_r, float* out_g, float* out_b);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetKeyIndex@ImGui@@YAHH@Z", ExactSpelling = true)]
    public static extern int GetKeyIndex(ImGuiKey imgui_key);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsKeyDown@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsKeyDown(int user_key_index);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsKeyPressed@ImGui@@YA_NH_N@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsKeyPressed(int user_key_index, [MarshalAs(UnmanagedType.I1)] bool repeat = true);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsKeyReleased@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsKeyReleased(int user_key_index);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetKeyPressedAmount@ImGui@@YAHHMM@Z", ExactSpelling = true)]
    public static extern int GetKeyPressedAmount(int key_index, float repeat_delay, float rate);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CaptureKeyboardFromApp@ImGui@@YAX_N@Z", ExactSpelling = true)]
    public static extern void CaptureKeyboardFromApp([MarshalAs(UnmanagedType.I1)] bool want_capture_keyboard_value = true);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsMouseDown@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsMouseDown(ImGuiMouseButton button);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsMouseClicked@ImGui@@YA_NH_N@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsMouseClicked(ImGuiMouseButton button, [MarshalAs(UnmanagedType.I1)] bool repeat = false);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsMouseReleased@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsMouseReleased(ImGuiMouseButton button);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsMouseDoubleClicked@ImGui@@YA_NH@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsMouseDoubleClicked(ImGuiMouseButton button);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsMouseHoveringRect(ImVec2* r_min, ImVec2* r_max, [MarshalAs(UnmanagedType.I1)] bool clip = true);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsMousePosValid(ImVec2* mouse_pos = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsAnyMouseDown@ImGui@@YA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsAnyMouseDown();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetMousePos@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetMousePos();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetMousePosOnOpeningCurrentPopup@ImGui@@YA?AUImVec2@@XZ", ExactSpelling = true)]
    public static extern ImVec2 GetMousePosOnOpeningCurrentPopup();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?IsMouseDragging@ImGui@@YA_NHM@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool IsMouseDragging(ImGuiMouseButton button, float lock_threshold = -1f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z", ExactSpelling = true)]
    public static extern ImVec2 GetMouseDragDelta(ImGuiMouseButton button = ImGuiMouseButton.Left, float lock_threshold = -1f);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ResetMouseDragDelta@ImGui@@YAXH@Z", ExactSpelling = true)]
    public static extern void ResetMouseDragDelta(ImGuiMouseButton button = ImGuiMouseButton.Left);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetMouseCursor@ImGui@@YAHXZ", ExactSpelling = true)]
    public static extern ImGuiMouseCursor GetMouseCursor();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetMouseCursor@ImGui@@YAXH@Z", ExactSpelling = true)]
    public static extern void SetMouseCursor(ImGuiMouseCursor cursor_type);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CaptureMouseFromApp@ImGui@@YAX_N@Z", ExactSpelling = true)]
    public static extern void CaptureMouseFromApp([MarshalAs(UnmanagedType.I1)] bool want_capture_mouse_value = true);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetClipboardText@ImGui@@YAPEBDXZ", ExactSpelling = true)]
    public static extern byte* GetClipboardText();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetClipboardText@ImGui@@YAXPEBD@Z", ExactSpelling = true)]
    public static extern void SetClipboardText(byte* text);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z", ExactSpelling = true)]
    public static extern void LoadIniSettingsFromDisk(byte* ini_filename);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z", ExactSpelling = true)]
    public static extern void LoadIniSettingsFromMemory(byte* ini_data, ulong ini_size = 0);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z", ExactSpelling = true)]
    public static extern void SaveIniSettingsToDisk(byte* ini_filename);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z", ExactSpelling = true)]
    public static extern byte* SaveIniSettingsToMemory(ulong* out_ini_size = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    public static extern bool DebugCheckVersionAndDataLayout(byte* version_str, ulong sz_io, ulong sz_style, ulong sz_vec2, ulong sz_vec4, ulong sz_drawvert, ulong sz_drawidx);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetAllocatorFunctions@ImGui@@YAXP6APEAX_KPEAX@ZP6AX11@Z1@Z", ExactSpelling = true)]
    public static extern void SetAllocatorFunctions(delegate* unmanaged[Cdecl]<ulong, void*, void*> alloc_func, delegate* unmanaged[Cdecl]<void*, void*, void> free_func, void* user_data = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?MemAlloc@ImGui@@YAPEAX_K@Z", ExactSpelling = true)]
    public static extern void* MemAlloc(ulong size);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?MemFree@ImGui@@YAXPEAX@Z", ExactSpelling = true)]
    public static extern void MemFree(void* ptr);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetPlatformIO@ImGui@@YAAEAUImGuiPlatformIO@@XZ", ExactSpelling = true)]
    public static extern ImGuiPlatformIO* GetPlatformIO();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?UpdatePlatformWindows@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void UpdatePlatformWindows();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?RenderPlatformWindowsDefault@ImGui@@YAXPEAX0@Z", ExactSpelling = true)]
    public static extern void RenderPlatformWindowsDefault(void* platform_render_arg = null, void* renderer_render_arg = null);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?DestroyPlatformWindows@ImGui@@YAXXZ", ExactSpelling = true)]
    public static extern void DestroyPlatformWindows();

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?FindViewportByID@ImGui@@YAPEAUImGuiViewport@@I@Z", ExactSpelling = true)]
    public static extern ImGuiViewport* FindViewportByID(uint id);

    [DllImport("InfectedImGui.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?FindViewportByPlatformHandle@ImGui@@YAPEAUImGuiViewport@@PEAX@Z", ExactSpelling = true)]
    public static extern ImGuiViewport* FindViewportByPlatformHandle(void* platform_handle);
}
